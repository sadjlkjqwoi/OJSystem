{"ast":null,"code":"var _class;\nimport \"core-js/modules/es.array.push.js\";\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.46.0(21007360cad28648bdf46282a2592cb47c3a7a6f)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n  constructor(_modeId, _defaults) {\n    this._modeId = _modeId;\n    this._defaults = _defaults;\n    this._worker = null;\n    this._client = null;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n    this._updateExtraLibsToken = 0;\n    this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(() => this._updateExtraLibs());\n  }\n  dispose() {\n    this._configChangeListener.dispose();\n    this._extraLibsChangeListener.dispose();\n    this._stopWorker();\n  }\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  }\n  async _updateExtraLibs() {\n    if (!this._worker) {\n      return;\n    }\n    const myToken = ++this._updateExtraLibsToken;\n    const proxy = await this._worker.getProxy();\n    if (this._updateExtraLibsToken !== myToken) {\n      return;\n    }\n    proxy.updateExtraLibs(this._defaults.getExtraLibs());\n  }\n  _getClient() {\n    if (!this._client) {\n      this._client = (async () => {\n        this._worker = monaco_editor_core_exports.editor.createWebWorker({\n          // module that exports the create() method and returns a `TypeScriptWorker` instance\n          moduleId: \"vs/language/typescript/tsWorker\",\n          label: this._modeId,\n          keepIdleModels: true,\n          // passed in to the create() method\n          createData: {\n            compilerOptions: this._defaults.getCompilerOptions(),\n            extraLibs: this._defaults.getExtraLibs(),\n            customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n            inlayHintsOptions: this._defaults.inlayHintsOptions\n          }\n        });\n        if (this._defaults.getEagerModelSync()) {\n          return await this._worker.withSyncedResources(monaco_editor_core_exports.editor.getModels().filter(model => model.getLanguageId() === this._modeId).map(model => model.uri));\n        }\n        return await this._worker.getProxy();\n      })();\n    }\n    return this._client;\n  }\n  async getLanguageServiceWorker(...resources) {\n    const client = await this._getClient();\n    if (this._worker) {\n      await this._worker.withSyncedResources(resources);\n    }\n    return client;\n  }\n};\n\n// src/language/typescript/languageFeatures.ts\nimport { typescriptDefaults } from \"./monaco.contribution.js\";\n\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.decorators.d.ts\"] = true;\nlibFileSet[\"lib.decorators.legacy.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.date.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.number.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es2022.array.d.ts\"] = true;\nlibFileSet[\"lib.es2022.d.ts\"] = true;\nlibFileSet[\"lib.es2022.error.d.ts\"] = true;\nlibFileSet[\"lib.es2022.full.d.ts\"] = true;\nlibFileSet[\"lib.es2022.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2022.object.d.ts\"] = true;\nlibFileSet[\"lib.es2022.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2022.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2022.string.d.ts\"] = true;\nlibFileSet[\"lib.es2023.array.d.ts\"] = true;\nlibFileSet[\"lib.es2023.d.ts\"] = true;\nlibFileSet[\"lib.es2023.full.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag === void 0) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent) {\n    result += newLine;\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  indent++;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent);\n    }\n  }\n  return result;\n}\nfunction displayPartsToString(displayParts) {\n  if (displayParts) {\n    return displayParts.map(displayPart => displayPart.text).join(\"\");\n  }\n  return \"\";\n}\nvar Adapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n  // protected _positionToOffset(model: editor.ITextModel, position: monaco.IPosition): number {\n  // \treturn model.getOffsetAt(position);\n  // }\n  // protected _offsetToPosition(model: editor.ITextModel, offset: number): monaco.IPosition {\n  // \treturn model.getPositionAt(offset);\n  // }\n  _textSpanToRange(model, span) {\n    let p1 = model.getPositionAt(span.start);\n    let p2 = model.getPositionAt(span.start + span.length);\n    let {\n      lineNumber: startLineNumber,\n      column: startColumn\n    } = p1;\n    let {\n      lineNumber: endLineNumber,\n      column: endColumn\n    } = p2;\n    return {\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn\n    };\n  }\n};\nvar LibFiles = class {\n  constructor(_worker) {\n    this._worker = _worker;\n    this._libFiles = {};\n    this._hasFetchedLibFiles = false;\n    this._fetchLibFilesPromise = null;\n  }\n  isLibFile(uri) {\n    if (!uri) {\n      return false;\n    }\n    if (uri.path.indexOf(\"/lib.\") === 0) {\n      return !!libFileSet[uri.path.slice(1)];\n    }\n    return false;\n  }\n  getOrCreateModel(fileName) {\n    const uri = monaco_editor_core_exports.Uri.parse(fileName);\n    const model = monaco_editor_core_exports.editor.getModel(uri);\n    if (model) {\n      return model;\n    }\n    if (this.isLibFile(uri) && this._hasFetchedLibFiles) {\n      return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n    }\n    const matchedLibFile = typescriptDefaults.getExtraLibs()[fileName];\n    if (matchedLibFile) {\n      return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n    }\n    return null;\n  }\n  _containsLibFile(uris) {\n    for (let uri of uris) {\n      if (this.isLibFile(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async fetchLibFilesIfNecessary(uris) {\n    if (!this._containsLibFile(uris)) {\n      return;\n    }\n    await this._fetchLibFiles();\n  }\n  _fetchLibFiles() {\n    if (!this._fetchLibFilesPromise) {\n      this._fetchLibFilesPromise = this._worker().then(w => w.getLibFiles()).then(libFiles => {\n        this._hasFetchedLibFiles = true;\n        this._libFiles = libFiles;\n      });\n    }\n    return this._fetchLibFilesPromise;\n  }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n  constructor(_libFiles, _defaults, _selector, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n    this._defaults = _defaults;\n    this._selector = _selector;\n    this._disposables = [];\n    this._listener = /* @__PURE__ */Object.create(null);\n    const onModelAdd = model => {\n      if (model.getLanguageId() !== _selector) {\n        return;\n      }\n      const maybeValidate = () => {\n        const {\n          onlyVisible\n        } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            this._doValidate(model);\n          }\n        } else {\n          this._doValidate(model);\n        }\n      };\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = window.setTimeout(maybeValidate, 500);\n      });\n      const visibleSubscription = model.onDidChangeAttached(() => {\n        const {\n          onlyVisible\n        } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            maybeValidate();\n          } else {\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n          }\n        }\n      });\n      this._listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          visibleSubscription.dispose();\n          clearTimeout(handle);\n        }\n      };\n      maybeValidate();\n    };\n    const onModelRemoved = model => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n      const key = model.uri.toString();\n      if (this._listener[key]) {\n        this._listener[key].dispose();\n        delete this._listener[key];\n      }\n    };\n    this._disposables.push(monaco_editor_core_exports.editor.onDidCreateModel(model => onModelAdd(model)));\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n    this._disposables.push(monaco_editor_core_exports.editor.onDidChangeModelLanguage(event => {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n    }));\n    this._disposables.push({\n      dispose() {\n        for (const model of monaco_editor_core_exports.editor.getModels()) {\n          onModelRemoved(model);\n        }\n      }\n    });\n    const recomputeDiagostics = () => {\n      for (const model of monaco_editor_core_exports.editor.getModels()) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    };\n    this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n    this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n    monaco_editor_core_exports.editor.getModels().forEach(model => onModelAdd(model));\n  }\n  dispose() {\n    this._disposables.forEach(d => d && d.dispose());\n    this._disposables = [];\n  }\n  async _doValidate(model) {\n    const worker = await this._worker(model.uri);\n    if (model.isDisposed()) {\n      return;\n    }\n    const promises = [];\n    const {\n      noSyntaxValidation,\n      noSemanticValidation,\n      noSuggestionDiagnostics\n    } = this._defaults.getDiagnosticsOptions();\n    if (!noSyntaxValidation) {\n      promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n    }\n    if (!noSemanticValidation) {\n      promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n    }\n    if (!noSuggestionDiagnostics) {\n      promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n    }\n    const allDiagnostics = await Promise.all(promises);\n    if (!allDiagnostics || model.isDisposed()) {\n      return;\n    }\n    const diagnostics = allDiagnostics.reduce((p, c) => c.concat(p), []).filter(d => (this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1);\n    const relatedUris = diagnostics.map(d => d.relatedInformation || []).reduce((p, c) => c.concat(p), []).map(relatedInformation => relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null);\n    await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n    if (model.isDisposed()) {\n      return;\n    }\n    monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, diagnostics.map(d => this._convertDiagnostics(model, d)));\n  }\n  _convertDiagnostics(model, diag) {\n    const diagStart = diag.start || 0;\n    const diagLength = diag.length || 1;\n    const {\n      lineNumber: startLineNumber,\n      column: startColumn\n    } = model.getPositionAt(diagStart);\n    const {\n      lineNumber: endLineNumber,\n      column: endColumn\n    } = model.getPositionAt(diagStart + diagLength);\n    const tags = [];\n    if (diag.reportsUnnecessary) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n    }\n    if (diag.reportsDeprecated) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n    }\n    return {\n      severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n      code: diag.code.toString(),\n      tags,\n      relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n    };\n  }\n  _convertRelatedInformation(model, relatedInformation) {\n    if (!relatedInformation) {\n      return [];\n    }\n    const result = [];\n    relatedInformation.forEach(info => {\n      let relatedResource = model;\n      if (info.file) {\n        relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n      }\n      if (!relatedResource) {\n        return;\n      }\n      const infoStart = info.start || 0;\n      const infoLength = info.length || 1;\n      const {\n        lineNumber: startLineNumber,\n        column: startColumn\n      } = relatedResource.getPositionAt(infoStart);\n      const {\n        lineNumber: endLineNumber,\n        column: endColumn\n      } = relatedResource.getPositionAt(infoStart + infoLength);\n      result.push({\n        resource: relatedResource.uri,\n        startLineNumber,\n        startColumn,\n        endLineNumber,\n        endColumn,\n        message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n      });\n    });\n    return result;\n  }\n  _tsDiagnosticCategoryToMarkerSeverity(category) {\n    switch (category) {\n      case 1 /* Error */:\n        return monaco_editor_core_exports.MarkerSeverity.Error;\n      case 3 /* Message */:\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n      case 0 /* Warning */:\n        return monaco_editor_core_exports.MarkerSeverity.Warning;\n      case 2 /* Suggestion */:\n        return monaco_editor_core_exports.MarkerSeverity.Hint;\n    }\n    return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n};\nvar SuggestAdapter = class _SuggestAdapter extends Adapter {\n  get triggerCharacters() {\n    return [\".\"];\n  }\n  async provideCompletionItems(model, position, _context, token) {\n    const wordInfo = model.getWordUntilPosition(position);\n    const wordRange = new monaco_editor_core_exports.Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const suggestions = info.entries.map(entry => {\n      let range = wordRange;\n      if (entry.replacementSpan) {\n        const p1 = model.getPositionAt(entry.replacementSpan.start);\n        const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n        range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n      }\n      const tags = [];\n      if (entry.kindModifiers !== void 0 && entry.kindModifiers.indexOf(\"deprecated\") !== -1) {\n        tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n      }\n      return {\n        uri: resource,\n        position,\n        offset,\n        range,\n        label: entry.name,\n        insertText: entry.name,\n        sortText: entry.sortText,\n        kind: _SuggestAdapter.convertKind(entry.kind),\n        tags\n      };\n    });\n    return {\n      suggestions\n    };\n  }\n  async resolveCompletionItem(item, token) {\n    const myItem = item;\n    const resource = myItem.uri;\n    const position = myItem.position;\n    const offset = myItem.offset;\n    const worker = await this._worker(resource);\n    const details = await worker.getCompletionEntryDetails(resource.toString(), offset, myItem.label);\n    if (!details) {\n      return myItem;\n    }\n    return {\n      uri: resource,\n      position,\n      label: details.name,\n      kind: _SuggestAdapter.convertKind(details.kind),\n      detail: displayPartsToString(details.displayParts),\n      documentation: {\n        value: _SuggestAdapter.createDocumentationString(details)\n      }\n    };\n  }\n  static convertKind(kind) {\n    switch (kind) {\n      case Kind.primitiveType:\n      case Kind.keyword:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n      case Kind.variable:\n      case Kind.localVariable:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n      case Kind.memberVariable:\n      case Kind.memberGetAccessor:\n      case Kind.memberSetAccessor:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n      case Kind.function:\n      case Kind.memberFunction:\n      case Kind.constructSignature:\n      case Kind.callSignature:\n      case Kind.indexSignature:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n      case Kind.enum:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n      case Kind.module:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n      case Kind.class:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n      case Kind.interface:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n      case Kind.warning:\n        return monaco_editor_core_exports.languages.CompletionItemKind.File;\n    }\n    return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n  }\n  static createDocumentationString(details) {\n    let documentationString = displayPartsToString(details.documentation);\n    if (details.tags) {\n      for (const tag of details.tags) {\n        documentationString += `\n\n${tagToString(tag)}`;\n      }\n    }\n    return documentationString;\n  }\n};\nfunction tagToString(tag) {\n  let tagLabel = `*@${tag.name}*`;\n  if (tag.name === \"param\" && tag.text) {\n    const [paramName, ...rest] = tag.text;\n    tagLabel += `\\`${paramName.text}\\``;\n    if (rest.length > 0) tagLabel += ` \\u2014 ${rest.map(r => r.text).join(\" \")}`;\n  } else if (Array.isArray(tag.text)) {\n    tagLabel += ` \\u2014 ${tag.text.map(r => r.text).join(\" \")}`;\n  } else if (tag.text) {\n    tagLabel += ` \\u2014 ${tag.text}`;\n  }\n  return tagLabel;\n}\nvar SignatureHelpAdapter = class _SignatureHelpAdapter extends Adapter {\n  constructor() {\n    super(...arguments);\n    this.signatureHelpTriggerCharacters = [\"(\", \",\"];\n  }\n  static _toSignatureHelpTriggerReason(context) {\n    switch (context.triggerKind) {\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n        if (context.triggerCharacter) {\n          if (context.isRetrigger) {\n            return {\n              kind: \"retrigger\",\n              triggerCharacter: context.triggerCharacter\n            };\n          } else {\n            return {\n              kind: \"characterTyped\",\n              triggerCharacter: context.triggerCharacter\n            };\n          }\n        } else {\n          return {\n            kind: \"invoked\"\n          };\n        }\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n        return context.isRetrigger ? {\n          kind: \"retrigger\"\n        } : {\n          kind: \"invoked\"\n        };\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n      default:\n        return {\n          kind: \"invoked\"\n        };\n    }\n  }\n  async provideSignatureHelp(model, position, token, context) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n      triggerReason: _SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n    });\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const ret = {\n      activeSignature: info.selectedItemIndex,\n      activeParameter: info.argumentIndex,\n      signatures: []\n    };\n    info.items.forEach(item => {\n      const signature = {\n        label: \"\",\n        parameters: []\n      };\n      signature.documentation = {\n        value: displayPartsToString(item.documentation)\n      };\n      signature.label += displayPartsToString(item.prefixDisplayParts);\n      item.parameters.forEach((p, i, a) => {\n        const label = displayPartsToString(p.displayParts);\n        const parameter = {\n          label,\n          documentation: {\n            value: displayPartsToString(p.documentation)\n          }\n        };\n        signature.label += label;\n        signature.parameters.push(parameter);\n        if (i < a.length - 1) {\n          signature.label += displayPartsToString(item.separatorDisplayParts);\n        }\n      });\n      signature.label += displayPartsToString(item.suffixDisplayParts);\n      ret.signatures.push(signature);\n    });\n    return {\n      value: ret,\n      dispose() {}\n    };\n  }\n};\nvar QuickInfoAdapter = class extends Adapter {\n  async provideHover(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const documentation = displayPartsToString(info.documentation);\n    const tags = info.tags ? info.tags.map(tag => tagToString(tag)).join(\"  \\n\\n\") : \"\";\n    const contents = displayPartsToString(info.displayParts);\n    return {\n      range: this._textSpanToRange(model, info.textSpan),\n      contents: [{\n        value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n      }, {\n        value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n      }]\n    };\n  }\n};\nvar DocumentHighlightAdapter = class extends Adapter {\n  async provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDocumentHighlights(resource.toString(), offset, [resource.toString()]);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    return entries.flatMap(entry => {\n      return entry.highlightSpans.map(highlightSpans => {\n        return {\n          range: this._textSpanToRange(model, highlightSpans.textSpan),\n          kind: highlightSpans.kind === \"writtenReference\" ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n        };\n      });\n    });\n  }\n};\nvar DefinitionAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideDefinition(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map(entry => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar ReferenceAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map(entry => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar OutlineAdapter = class extends Adapter {\n  async provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const root = await worker.getNavigationTree(resource.toString());\n    if (!root || model.isDisposed()) {\n      return;\n    }\n    const convert = (item, containerLabel) => {\n      const result2 = {\n        name: item.text,\n        detail: \"\",\n        kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n        range: this._textSpanToRange(model, item.spans[0]),\n        selectionRange: this._textSpanToRange(model, item.spans[0]),\n        tags: [],\n        children: item.childItems?.map(child => convert(child, item.text)),\n        containerName: containerLabel\n      };\n      return result2;\n    };\n    const result = root.childItems ? root.childItems.map(item => convert(item)) : [];\n    return result;\n  }\n};\nvar Kind = (_class = class Kind {}, _class.unknown = \"\", _class.keyword = \"keyword\", _class.script = \"script\", _class.module = \"module\", _class.class = \"class\", _class.interface = \"interface\", _class.type = \"type\", _class.enum = \"enum\", _class.variable = \"var\", _class.localVariable = \"local var\", _class.function = \"function\", _class.localFunction = \"local function\", _class.memberFunction = \"method\", _class.memberGetAccessor = \"getter\", _class.memberSetAccessor = \"setter\", _class.memberVariable = \"property\", _class.constructorImplementation = \"constructor\", _class.callSignature = \"call\", _class.indexSignature = \"index\", _class.constructSignature = \"construct\", _class.parameter = \"parameter\", _class.typeParameter = \"type parameter\", _class.primitiveType = \"primitive type\", _class.label = \"label\", _class.alias = \"alias\", _class.const = \"const\", _class.let = \"let\", _class.warning = \"warning\", _class);\nvar outlineTypeTable = /* @__PURE__ */Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n  static _convertOptions(options) {\n    return {\n      ConvertTabsToSpaces: options.insertSpaces,\n      TabSize: options.tabSize,\n      IndentSize: options.tabSize,\n      IndentStyle: 2 /* Smart */,\n      NewLineCharacter: \"\\n\",\n      InsertSpaceAfterCommaDelimiter: true,\n      InsertSpaceAfterSemicolonInForStatements: true,\n      InsertSpaceBeforeAndAfterBinaryOperators: true,\n      InsertSpaceAfterKeywordsInControlFlowStatements: true,\n      InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n      InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n      PlaceOpenBraceOnNewLineForControlBlocks: false,\n      PlaceOpenBraceOnNewLineForFunctions: false\n    };\n  }\n  _convertTextChanges(model, change) {\n    return {\n      text: change.newText,\n      range: this._textSpanToRange(model, change.span)\n    };\n  }\n};\nvar FormatAdapter = class extends FormatHelper {\n  constructor() {\n    super(...arguments);\n    this.canFormatMultipleRanges = false;\n  }\n  async provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    const startOffset = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const endOffset = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsForRange(resource.toString(), startOffset, endOffset, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map(edit => this._convertTextChanges(model, edit));\n  }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n  get autoFormatTriggerCharacters() {\n    return [\";\", \"}\", \"\\n\"];\n  }\n  async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsAfterKeystroke(resource.toString(), offset, ch, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map(edit => this._convertTextChanges(model, edit));\n  }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n  async provideCodeActions(model, range, context, token) {\n    const resource = model.uri;\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const formatOptions = FormatHelper._convertOptions(model.getOptions());\n    const errorCodes = context.markers.filter(m => m.code).map(m => m.code).map(Number);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const codeFixes = await worker.getCodeFixesAtPosition(resource.toString(), start, end, errorCodes, formatOptions);\n    if (!codeFixes || model.isDisposed()) {\n      return {\n        actions: [],\n        dispose: () => {}\n      };\n    }\n    const actions = codeFixes.filter(fix => {\n      return fix.changes.filter(change => change.isNewFile).length === 0;\n    }).map(fix => {\n      return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n    });\n    return {\n      actions,\n      dispose: () => {}\n    };\n  }\n  _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n    const edits = [];\n    for (const change of codeFix.changes) {\n      for (const textChange of change.textChanges) {\n        edits.push({\n          resource: model.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model, textChange.span),\n            text: textChange.newText\n          }\n        });\n      }\n    }\n    const action = {\n      title: codeFix.description,\n      edit: {\n        edits\n      },\n      diagnostics: context.markers,\n      kind: \"quickfix\"\n    };\n    return action;\n  }\n};\nvar RenameAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const renameInfo = await worker.getRenameInfo(fileName, offset, {\n      allowRenameOfImportPath: false\n    });\n    if (renameInfo.canRename === false) {\n      return {\n        edits: [],\n        rejectReason: renameInfo.localizedErrorMessage\n      };\n    }\n    if (renameInfo.fileToRename !== void 0) {\n      throw new Error(\"Renaming files is not supported.\");\n    }\n    const renameLocations = await worker.findRenameLocations(fileName, offset, /*strings*/\n    false, /*comments*/\n    false, /*prefixAndSuffix*/\n    false);\n    if (!renameLocations || model.isDisposed()) {\n      return;\n    }\n    const edits = [];\n    for (const renameLocation of renameLocations) {\n      const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n      if (model2) {\n        edits.push({\n          resource: model2.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model2, renameLocation.textSpan),\n            text: newName\n          }\n        });\n      } else {\n        throw new Error(`Unknown file ${renameLocation.fileName}.`);\n      }\n    }\n    return {\n      edits\n    };\n  }\n};\nvar InlayHintsAdapter = class extends Adapter {\n  async provideInlayHints(model, range, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return null;\n    }\n    const tsHints = await worker.provideInlayHints(fileName, start, end);\n    const hints = tsHints.map(hint => {\n      return {\n        ...hint,\n        label: hint.text,\n        position: model.getPositionAt(hint.position),\n        kind: this._convertHintKind(hint.kind)\n      };\n    });\n    return {\n      hints,\n      dispose: () => {}\n    };\n  }\n  _convertHintKind(kind) {\n    switch (kind) {\n      case \"Parameter\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n      case \"Type\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n      default:\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n    }\n  }\n};\n\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n    resolve(javaScriptWorker);\n  });\n}\nfunction getTypeScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n    resolve(typeScriptWorker);\n  });\n}\nfunction setupMode(defaults, modeId) {\n  const disposables = [];\n  const providers = [];\n  const client = new WorkerManager(modeId, defaults);\n  disposables.push(client);\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n  const libFiles = new LibFiles(worker);\n  function registerProviders() {\n    const {\n      modeConfiguration\n    } = defaults;\n    disposeAll(providers);\n    if (modeConfiguration.completionItems) {\n      providers.push(monaco_editor_core_exports.languages.registerCompletionItemProvider(modeId, new SuggestAdapter(worker)));\n    }\n    if (modeConfiguration.signatureHelp) {\n      providers.push(monaco_editor_core_exports.languages.registerSignatureHelpProvider(modeId, new SignatureHelpAdapter(worker)));\n    }\n    if (modeConfiguration.hovers) {\n      providers.push(monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker)));\n    }\n    if (modeConfiguration.documentHighlights) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentHighlightProvider(modeId, new DocumentHighlightAdapter(worker)));\n    }\n    if (modeConfiguration.definitions) {\n      providers.push(monaco_editor_core_exports.languages.registerDefinitionProvider(modeId, new DefinitionAdapter(libFiles, worker)));\n    }\n    if (modeConfiguration.references) {\n      providers.push(monaco_editor_core_exports.languages.registerReferenceProvider(modeId, new ReferenceAdapter(libFiles, worker)));\n    }\n    if (modeConfiguration.documentSymbols) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentSymbolProvider(modeId, new OutlineAdapter(worker)));\n    }\n    if (modeConfiguration.rename) {\n      providers.push(monaco_editor_core_exports.languages.registerRenameProvider(modeId, new RenameAdapter(libFiles, worker)));\n    }\n    if (modeConfiguration.documentRangeFormattingEdits) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(modeId, new FormatAdapter(worker)));\n    }\n    if (modeConfiguration.onTypeFormattingEdits) {\n      providers.push(monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(modeId, new FormatOnTypeAdapter(worker)));\n    }\n    if (modeConfiguration.codeActions) {\n      providers.push(monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker)));\n    }\n    if (modeConfiguration.inlayHints) {\n      providers.push(monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker)));\n    }\n    if (modeConfiguration.diagnostics) {\n      providers.push(new DiagnosticsAdapter(libFiles, defaults, modeId, worker));\n    }\n  }\n  registerProviders();\n  disposables.push(asDisposable(providers));\n  return worker;\n}\nfunction asDisposable(disposables) {\n  return {\n    dispose: () => disposeAll(disposables)\n  };\n}\nfunction disposeAll(disposables) {\n  while (disposables.length) {\n    disposables.pop().dispose();\n  }\n}\nexport { Adapter, CodeActionAdaptor, DefinitionAdapter, DiagnosticsAdapter, DocumentHighlightAdapter, FormatAdapter, FormatHelper, FormatOnTypeAdapter, InlayHintsAdapter, Kind, LibFiles, OutlineAdapter, QuickInfoAdapter, ReferenceAdapter, RenameAdapter, SignatureHelpAdapter, SuggestAdapter, WorkerManager, flattenDiagnosticMessageText, getJavaScriptWorker, getTypeScriptWorker, setupJavaScript, setupTypeScript };","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__reExport","target","mod","secondTarget","monaco_editor_core_exports","monaco_editor_core_star","WorkerManager","constructor","_modeId","_defaults","_worker","_client","_configChangeListener","onDidChange","_stopWorker","_updateExtraLibsToken","_extraLibsChangeListener","onDidExtraLibsChange","_updateExtraLibs","dispose","myToken","proxy","getProxy","updateExtraLibs","getExtraLibs","_getClient","editor","createWebWorker","moduleId","label","keepIdleModels","createData","compilerOptions","getCompilerOptions","extraLibs","customWorkerPath","workerOptions","inlayHintsOptions","getEagerModelSync","withSyncedResources","getModels","filter","model","getLanguageId","map","uri","getLanguageServiceWorker","resources","client","typescriptDefaults","libFileSet","flattenDiagnosticMessageText","diag","newLine","indent","result","i","messageText","next","kid","displayPartsToString","displayParts","displayPart","text","join","Adapter","_textSpanToRange","span","p1","getPositionAt","start","p2","length","lineNumber","startLineNumber","column","startColumn","endLineNumber","endColumn","LibFiles","_libFiles","_hasFetchedLibFiles","_fetchLibFilesPromise","isLibFile","path","indexOf","slice","getOrCreateModel","fileName","Uri","parse","getModel","createModel","matchedLibFile","content","_containsLibFile","uris","fetchLibFilesIfNecessary","_fetchLibFiles","then","w","getLibFiles","libFiles","DiagnosticsAdapter","_selector","worker","_disposables","_listener","create","onModelAdd","maybeValidate","onlyVisible","getDiagnosticsOptions","isAttachedToEditor","_doValidate","handle","changeSubscription","onDidChangeContent","clearTimeout","window","setTimeout","visibleSubscription","onDidChangeAttached","setModelMarkers","toString","onModelRemoved","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","recomputeDiagostics","forEach","d","isDisposed","promises","noSyntaxValidation","noSemanticValidation","noSuggestionDiagnostics","getSyntacticDiagnostics","getSemanticDiagnostics","getSuggestionDiagnostics","allDiagnostics","Promise","all","diagnostics","reduce","p","c","concat","diagnosticCodesToIgnore","code","relatedUris","relatedInformation","file","_convertDiagnostics","diagStart","diagLength","tags","reportsUnnecessary","MarkerTag","Unnecessary","reportsDeprecated","Deprecated","severity","_tsDiagnosticCategoryToMarkerSeverity","category","message","_convertRelatedInformation","info","relatedResource","infoStart","infoLength","resource","MarkerSeverity","Error","Info","Warning","Hint","SuggestAdapter","_SuggestAdapter","triggerCharacters","provideCompletionItems","position","_context","token","wordInfo","getWordUntilPosition","wordRange","Range","offset","getOffsetAt","getCompletionsAtPosition","suggestions","entries","entry","range","replacementSpan","kindModifiers","languages","CompletionItemTag","name","insertText","sortText","kind","convertKind","resolveCompletionItem","item","myItem","details","getCompletionEntryDetails","detail","documentation","value","createDocumentationString","Kind","primitiveType","keyword","CompletionItemKind","Keyword","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","module","Module","class","Class","interface","Interface","warning","File","Property","documentationString","tag","tagToString","tagLabel","paramName","rest","r","Array","isArray","SignatureHelpAdapter","_SignatureHelpAdapter","arguments","signatureHelpTriggerCharacters","_toSignatureHelpTriggerReason","context","triggerKind","SignatureHelpTriggerKind","TriggerCharacter","triggerCharacter","isRetrigger","ContentChange","Invoke","provideSignatureHelp","getSignatureHelpItems","triggerReason","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","QuickInfoAdapter","provideHover","getQuickInfoAtPosition","contents","textSpan","DocumentHighlightAdapter","provideDocumentHighlights","getDocumentHighlights","flatMap","highlightSpans","DocumentHighlightKind","Write","Text","DefinitionAdapter","provideDefinition","getDefinitionAtPosition","refModel","ReferenceAdapter","provideReferences","getReferencesAtPosition","OutlineAdapter","provideDocumentSymbols","root","getNavigationTree","convert","containerLabel","result2","outlineTypeTable","SymbolKind","spans","selectionRange","children","childItems","child","containerName","_class","unknown","script","type","localFunction","constructorImplementation","typeParameter","alias","const","let","Method","FormatHelper","_convertOptions","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","IndentStyle","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","newText","FormatAdapter","canFormatMultipleRanges","provideDocumentRangeFormattingEdits","startOffset","endOffset","edits","getFormattingEditsForRange","edit","FormatOnTypeAdapter","autoFormatTriggerCharacters","provideOnTypeFormattingEdits","ch","getFormattingEditsAfterKeystroke","CodeActionAdaptor","provideCodeActions","end","formatOptions","getOptions","errorCodes","markers","m","Number","codeFixes","getCodeFixesAtPosition","actions","fix","changes","isNewFile","_tsCodeFixActionToMonacoCodeAction","codeFix","textChange","textChanges","versionId","textEdit","action","title","description","RenameAdapter","provideRenameEdits","newName","renameInfo","getRenameInfo","allowRenameOfImportPath","canRename","rejectReason","localizedErrorMessage","fileToRename","renameLocations","findRenameLocations","renameLocation","model2","InlayHintsAdapter","provideInlayHints","tsHints","hints","hint","_convertHintKind","InlayHintKind","Parameter","Type","javaScriptWorker","typeScriptWorker","setupTypeScript","defaults","setupMode","setupJavaScript","getJavaScriptWorker","resolve","reject","getTypeScriptWorker","modeId","disposables","providers","registerProviders","modeConfiguration","disposeAll","completionItems","registerCompletionItemProvider","signatureHelp","registerSignatureHelpProvider","hovers","registerHoverProvider","documentHighlights","registerDocumentHighlightProvider","definitions","registerDefinitionProvider","references","registerReferenceProvider","documentSymbols","registerDocumentSymbolProvider","rename","registerRenameProvider","documentRangeFormattingEdits","registerDocumentRangeFormattingEditProvider","onTypeFormattingEdits","registerOnTypeFormattingEditProvider","codeActions","registerCodeActionProvider","inlayHints","registerInlayHintsProvider","asDisposable","pop"],"sources":["D:/yupi/OJ System/OJ System/feioj-front/node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.46.0(21007360cad28648bdf46282a2592cb47c3a7a6f)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n  constructor(_modeId, _defaults) {\n    this._modeId = _modeId;\n    this._defaults = _defaults;\n    this._worker = null;\n    this._client = null;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n    this._updateExtraLibsToken = 0;\n    this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(\n      () => this._updateExtraLibs()\n    );\n  }\n  dispose() {\n    this._configChangeListener.dispose();\n    this._extraLibsChangeListener.dispose();\n    this._stopWorker();\n  }\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  }\n  async _updateExtraLibs() {\n    if (!this._worker) {\n      return;\n    }\n    const myToken = ++this._updateExtraLibsToken;\n    const proxy = await this._worker.getProxy();\n    if (this._updateExtraLibsToken !== myToken) {\n      return;\n    }\n    proxy.updateExtraLibs(this._defaults.getExtraLibs());\n  }\n  _getClient() {\n    if (!this._client) {\n      this._client = (async () => {\n        this._worker = monaco_editor_core_exports.editor.createWebWorker({\n          // module that exports the create() method and returns a `TypeScriptWorker` instance\n          moduleId: \"vs/language/typescript/tsWorker\",\n          label: this._modeId,\n          keepIdleModels: true,\n          // passed in to the create() method\n          createData: {\n            compilerOptions: this._defaults.getCompilerOptions(),\n            extraLibs: this._defaults.getExtraLibs(),\n            customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n            inlayHintsOptions: this._defaults.inlayHintsOptions\n          }\n        });\n        if (this._defaults.getEagerModelSync()) {\n          return await this._worker.withSyncedResources(\n            monaco_editor_core_exports.editor.getModels().filter((model) => model.getLanguageId() === this._modeId).map((model) => model.uri)\n          );\n        }\n        return await this._worker.getProxy();\n      })();\n    }\n    return this._client;\n  }\n  async getLanguageServiceWorker(...resources) {\n    const client = await this._getClient();\n    if (this._worker) {\n      await this._worker.withSyncedResources(resources);\n    }\n    return client;\n  }\n};\n\n// src/language/typescript/languageFeatures.ts\nimport {\n  typescriptDefaults\n} from \"./monaco.contribution.js\";\n\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.decorators.d.ts\"] = true;\nlibFileSet[\"lib.decorators.legacy.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.date.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.number.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es2022.array.d.ts\"] = true;\nlibFileSet[\"lib.es2022.d.ts\"] = true;\nlibFileSet[\"lib.es2022.error.d.ts\"] = true;\nlibFileSet[\"lib.es2022.full.d.ts\"] = true;\nlibFileSet[\"lib.es2022.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2022.object.d.ts\"] = true;\nlibFileSet[\"lib.es2022.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2022.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2022.string.d.ts\"] = true;\nlibFileSet[\"lib.es2023.array.d.ts\"] = true;\nlibFileSet[\"lib.es2023.d.ts\"] = true;\nlibFileSet[\"lib.es2023.full.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag === void 0) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent) {\n    result += newLine;\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  indent++;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent);\n    }\n  }\n  return result;\n}\nfunction displayPartsToString(displayParts) {\n  if (displayParts) {\n    return displayParts.map((displayPart) => displayPart.text).join(\"\");\n  }\n  return \"\";\n}\nvar Adapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n  // protected _positionToOffset(model: editor.ITextModel, position: monaco.IPosition): number {\n  // \treturn model.getOffsetAt(position);\n  // }\n  // protected _offsetToPosition(model: editor.ITextModel, offset: number): monaco.IPosition {\n  // \treturn model.getPositionAt(offset);\n  // }\n  _textSpanToRange(model, span) {\n    let p1 = model.getPositionAt(span.start);\n    let p2 = model.getPositionAt(span.start + span.length);\n    let { lineNumber: startLineNumber, column: startColumn } = p1;\n    let { lineNumber: endLineNumber, column: endColumn } = p2;\n    return { startLineNumber, startColumn, endLineNumber, endColumn };\n  }\n};\nvar LibFiles = class {\n  constructor(_worker) {\n    this._worker = _worker;\n    this._libFiles = {};\n    this._hasFetchedLibFiles = false;\n    this._fetchLibFilesPromise = null;\n  }\n  isLibFile(uri) {\n    if (!uri) {\n      return false;\n    }\n    if (uri.path.indexOf(\"/lib.\") === 0) {\n      return !!libFileSet[uri.path.slice(1)];\n    }\n    return false;\n  }\n  getOrCreateModel(fileName) {\n    const uri = monaco_editor_core_exports.Uri.parse(fileName);\n    const model = monaco_editor_core_exports.editor.getModel(uri);\n    if (model) {\n      return model;\n    }\n    if (this.isLibFile(uri) && this._hasFetchedLibFiles) {\n      return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n    }\n    const matchedLibFile = typescriptDefaults.getExtraLibs()[fileName];\n    if (matchedLibFile) {\n      return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n    }\n    return null;\n  }\n  _containsLibFile(uris) {\n    for (let uri of uris) {\n      if (this.isLibFile(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async fetchLibFilesIfNecessary(uris) {\n    if (!this._containsLibFile(uris)) {\n      return;\n    }\n    await this._fetchLibFiles();\n  }\n  _fetchLibFiles() {\n    if (!this._fetchLibFilesPromise) {\n      this._fetchLibFilesPromise = this._worker().then((w) => w.getLibFiles()).then((libFiles) => {\n        this._hasFetchedLibFiles = true;\n        this._libFiles = libFiles;\n      });\n    }\n    return this._fetchLibFilesPromise;\n  }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n  constructor(_libFiles, _defaults, _selector, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n    this._defaults = _defaults;\n    this._selector = _selector;\n    this._disposables = [];\n    this._listener = /* @__PURE__ */ Object.create(null);\n    const onModelAdd = (model) => {\n      if (model.getLanguageId() !== _selector) {\n        return;\n      }\n      const maybeValidate = () => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            this._doValidate(model);\n          }\n        } else {\n          this._doValidate(model);\n        }\n      };\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = window.setTimeout(maybeValidate, 500);\n      });\n      const visibleSubscription = model.onDidChangeAttached(() => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            maybeValidate();\n          } else {\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n          }\n        }\n      });\n      this._listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          visibleSubscription.dispose();\n          clearTimeout(handle);\n        }\n      };\n      maybeValidate();\n    };\n    const onModelRemoved = (model) => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n      const key = model.uri.toString();\n      if (this._listener[key]) {\n        this._listener[key].dispose();\n        delete this._listener[key];\n      }\n    };\n    this._disposables.push(\n      monaco_editor_core_exports.editor.onDidCreateModel((model) => onModelAdd(model))\n    );\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n    this._disposables.push(\n      monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\n        onModelRemoved(event.model);\n        onModelAdd(event.model);\n      })\n    );\n    this._disposables.push({\n      dispose() {\n        for (const model of monaco_editor_core_exports.editor.getModels()) {\n          onModelRemoved(model);\n        }\n      }\n    });\n    const recomputeDiagostics = () => {\n      for (const model of monaco_editor_core_exports.editor.getModels()) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    };\n    this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n    this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n    monaco_editor_core_exports.editor.getModels().forEach((model) => onModelAdd(model));\n  }\n  dispose() {\n    this._disposables.forEach((d) => d && d.dispose());\n    this._disposables = [];\n  }\n  async _doValidate(model) {\n    const worker = await this._worker(model.uri);\n    if (model.isDisposed()) {\n      return;\n    }\n    const promises = [];\n    const { noSyntaxValidation, noSemanticValidation, noSuggestionDiagnostics } = this._defaults.getDiagnosticsOptions();\n    if (!noSyntaxValidation) {\n      promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n    }\n    if (!noSemanticValidation) {\n      promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n    }\n    if (!noSuggestionDiagnostics) {\n      promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n    }\n    const allDiagnostics = await Promise.all(promises);\n    if (!allDiagnostics || model.isDisposed()) {\n      return;\n    }\n    const diagnostics = allDiagnostics.reduce((p, c) => c.concat(p), []).filter(\n      (d) => (this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1\n    );\n    const relatedUris = diagnostics.map((d) => d.relatedInformation || []).reduce((p, c) => c.concat(p), []).map(\n      (relatedInformation) => relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null\n    );\n    await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n    if (model.isDisposed()) {\n      return;\n    }\n    monaco_editor_core_exports.editor.setModelMarkers(\n      model,\n      this._selector,\n      diagnostics.map((d) => this._convertDiagnostics(model, d))\n    );\n  }\n  _convertDiagnostics(model, diag) {\n    const diagStart = diag.start || 0;\n    const diagLength = diag.length || 1;\n    const { lineNumber: startLineNumber, column: startColumn } = model.getPositionAt(diagStart);\n    const { lineNumber: endLineNumber, column: endColumn } = model.getPositionAt(\n      diagStart + diagLength\n    );\n    const tags = [];\n    if (diag.reportsUnnecessary) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n    }\n    if (diag.reportsDeprecated) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n    }\n    return {\n      severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n      code: diag.code.toString(),\n      tags,\n      relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n    };\n  }\n  _convertRelatedInformation(model, relatedInformation) {\n    if (!relatedInformation) {\n      return [];\n    }\n    const result = [];\n    relatedInformation.forEach((info) => {\n      let relatedResource = model;\n      if (info.file) {\n        relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n      }\n      if (!relatedResource) {\n        return;\n      }\n      const infoStart = info.start || 0;\n      const infoLength = info.length || 1;\n      const { lineNumber: startLineNumber, column: startColumn } = relatedResource.getPositionAt(infoStart);\n      const { lineNumber: endLineNumber, column: endColumn } = relatedResource.getPositionAt(\n        infoStart + infoLength\n      );\n      result.push({\n        resource: relatedResource.uri,\n        startLineNumber,\n        startColumn,\n        endLineNumber,\n        endColumn,\n        message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n      });\n    });\n    return result;\n  }\n  _tsDiagnosticCategoryToMarkerSeverity(category) {\n    switch (category) {\n      case 1 /* Error */:\n        return monaco_editor_core_exports.MarkerSeverity.Error;\n      case 3 /* Message */:\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n      case 0 /* Warning */:\n        return monaco_editor_core_exports.MarkerSeverity.Warning;\n      case 2 /* Suggestion */:\n        return monaco_editor_core_exports.MarkerSeverity.Hint;\n    }\n    return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n};\nvar SuggestAdapter = class _SuggestAdapter extends Adapter {\n  get triggerCharacters() {\n    return [\".\"];\n  }\n  async provideCompletionItems(model, position, _context, token) {\n    const wordInfo = model.getWordUntilPosition(position);\n    const wordRange = new monaco_editor_core_exports.Range(\n      position.lineNumber,\n      wordInfo.startColumn,\n      position.lineNumber,\n      wordInfo.endColumn\n    );\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const suggestions = info.entries.map((entry) => {\n      let range = wordRange;\n      if (entry.replacementSpan) {\n        const p1 = model.getPositionAt(entry.replacementSpan.start);\n        const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n        range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n      }\n      const tags = [];\n      if (entry.kindModifiers !== void 0 && entry.kindModifiers.indexOf(\"deprecated\") !== -1) {\n        tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n      }\n      return {\n        uri: resource,\n        position,\n        offset,\n        range,\n        label: entry.name,\n        insertText: entry.name,\n        sortText: entry.sortText,\n        kind: _SuggestAdapter.convertKind(entry.kind),\n        tags\n      };\n    });\n    return {\n      suggestions\n    };\n  }\n  async resolveCompletionItem(item, token) {\n    const myItem = item;\n    const resource = myItem.uri;\n    const position = myItem.position;\n    const offset = myItem.offset;\n    const worker = await this._worker(resource);\n    const details = await worker.getCompletionEntryDetails(\n      resource.toString(),\n      offset,\n      myItem.label\n    );\n    if (!details) {\n      return myItem;\n    }\n    return {\n      uri: resource,\n      position,\n      label: details.name,\n      kind: _SuggestAdapter.convertKind(details.kind),\n      detail: displayPartsToString(details.displayParts),\n      documentation: {\n        value: _SuggestAdapter.createDocumentationString(details)\n      }\n    };\n  }\n  static convertKind(kind) {\n    switch (kind) {\n      case Kind.primitiveType:\n      case Kind.keyword:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n      case Kind.variable:\n      case Kind.localVariable:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n      case Kind.memberVariable:\n      case Kind.memberGetAccessor:\n      case Kind.memberSetAccessor:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n      case Kind.function:\n      case Kind.memberFunction:\n      case Kind.constructSignature:\n      case Kind.callSignature:\n      case Kind.indexSignature:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n      case Kind.enum:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n      case Kind.module:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n      case Kind.class:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n      case Kind.interface:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n      case Kind.warning:\n        return monaco_editor_core_exports.languages.CompletionItemKind.File;\n    }\n    return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n  }\n  static createDocumentationString(details) {\n    let documentationString = displayPartsToString(details.documentation);\n    if (details.tags) {\n      for (const tag of details.tags) {\n        documentationString += `\n\n${tagToString(tag)}`;\n      }\n    }\n    return documentationString;\n  }\n};\nfunction tagToString(tag) {\n  let tagLabel = `*@${tag.name}*`;\n  if (tag.name === \"param\" && tag.text) {\n    const [paramName, ...rest] = tag.text;\n    tagLabel += `\\`${paramName.text}\\``;\n    if (rest.length > 0)\n      tagLabel += ` \\u2014 ${rest.map((r) => r.text).join(\" \")}`;\n  } else if (Array.isArray(tag.text)) {\n    tagLabel += ` \\u2014 ${tag.text.map((r) => r.text).join(\" \")}`;\n  } else if (tag.text) {\n    tagLabel += ` \\u2014 ${tag.text}`;\n  }\n  return tagLabel;\n}\nvar SignatureHelpAdapter = class _SignatureHelpAdapter extends Adapter {\n  constructor() {\n    super(...arguments);\n    this.signatureHelpTriggerCharacters = [\"(\", \",\"];\n  }\n  static _toSignatureHelpTriggerReason(context) {\n    switch (context.triggerKind) {\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n        if (context.triggerCharacter) {\n          if (context.isRetrigger) {\n            return { kind: \"retrigger\", triggerCharacter: context.triggerCharacter };\n          } else {\n            return { kind: \"characterTyped\", triggerCharacter: context.triggerCharacter };\n          }\n        } else {\n          return { kind: \"invoked\" };\n        }\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n        return context.isRetrigger ? { kind: \"retrigger\" } : { kind: \"invoked\" };\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n      default:\n        return { kind: \"invoked\" };\n    }\n  }\n  async provideSignatureHelp(model, position, token, context) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n      triggerReason: _SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n    });\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const ret = {\n      activeSignature: info.selectedItemIndex,\n      activeParameter: info.argumentIndex,\n      signatures: []\n    };\n    info.items.forEach((item) => {\n      const signature = {\n        label: \"\",\n        parameters: []\n      };\n      signature.documentation = {\n        value: displayPartsToString(item.documentation)\n      };\n      signature.label += displayPartsToString(item.prefixDisplayParts);\n      item.parameters.forEach((p, i, a) => {\n        const label = displayPartsToString(p.displayParts);\n        const parameter = {\n          label,\n          documentation: {\n            value: displayPartsToString(p.documentation)\n          }\n        };\n        signature.label += label;\n        signature.parameters.push(parameter);\n        if (i < a.length - 1) {\n          signature.label += displayPartsToString(item.separatorDisplayParts);\n        }\n      });\n      signature.label += displayPartsToString(item.suffixDisplayParts);\n      ret.signatures.push(signature);\n    });\n    return {\n      value: ret,\n      dispose() {\n      }\n    };\n  }\n};\nvar QuickInfoAdapter = class extends Adapter {\n  async provideHover(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const documentation = displayPartsToString(info.documentation);\n    const tags = info.tags ? info.tags.map((tag) => tagToString(tag)).join(\"  \\n\\n\") : \"\";\n    const contents = displayPartsToString(info.displayParts);\n    return {\n      range: this._textSpanToRange(model, info.textSpan),\n      contents: [\n        {\n          value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n        },\n        {\n          value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n        }\n      ]\n    };\n  }\n};\nvar DocumentHighlightAdapter = class extends Adapter {\n  async provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDocumentHighlights(resource.toString(), offset, [\n      resource.toString()\n    ]);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    return entries.flatMap((entry) => {\n      return entry.highlightSpans.map((highlightSpans) => {\n        return {\n          range: this._textSpanToRange(model, highlightSpans.textSpan),\n          kind: highlightSpans.kind === \"writtenReference\" ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n        };\n      });\n    });\n  }\n};\nvar DefinitionAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideDefinition(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(\n      entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName))\n    );\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar ReferenceAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(\n      entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName))\n    );\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar OutlineAdapter = class extends Adapter {\n  async provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const root = await worker.getNavigationTree(resource.toString());\n    if (!root || model.isDisposed()) {\n      return;\n    }\n    const convert = (item, containerLabel) => {\n      const result2 = {\n        name: item.text,\n        detail: \"\",\n        kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n        range: this._textSpanToRange(model, item.spans[0]),\n        selectionRange: this._textSpanToRange(model, item.spans[0]),\n        tags: [],\n        children: item.childItems?.map((child) => convert(child, item.text)),\n        containerName: containerLabel\n      };\n      return result2;\n    };\n    const result = root.childItems ? root.childItems.map((item) => convert(item)) : [];\n    return result;\n  }\n};\nvar Kind = class {\n  static {\n    this.unknown = \"\";\n  }\n  static {\n    this.keyword = \"keyword\";\n  }\n  static {\n    this.script = \"script\";\n  }\n  static {\n    this.module = \"module\";\n  }\n  static {\n    this.class = \"class\";\n  }\n  static {\n    this.interface = \"interface\";\n  }\n  static {\n    this.type = \"type\";\n  }\n  static {\n    this.enum = \"enum\";\n  }\n  static {\n    this.variable = \"var\";\n  }\n  static {\n    this.localVariable = \"local var\";\n  }\n  static {\n    this.function = \"function\";\n  }\n  static {\n    this.localFunction = \"local function\";\n  }\n  static {\n    this.memberFunction = \"method\";\n  }\n  static {\n    this.memberGetAccessor = \"getter\";\n  }\n  static {\n    this.memberSetAccessor = \"setter\";\n  }\n  static {\n    this.memberVariable = \"property\";\n  }\n  static {\n    this.constructorImplementation = \"constructor\";\n  }\n  static {\n    this.callSignature = \"call\";\n  }\n  static {\n    this.indexSignature = \"index\";\n  }\n  static {\n    this.constructSignature = \"construct\";\n  }\n  static {\n    this.parameter = \"parameter\";\n  }\n  static {\n    this.typeParameter = \"type parameter\";\n  }\n  static {\n    this.primitiveType = \"primitive type\";\n  }\n  static {\n    this.label = \"label\";\n  }\n  static {\n    this.alias = \"alias\";\n  }\n  static {\n    this.const = \"const\";\n  }\n  static {\n    this.let = \"let\";\n  }\n  static {\n    this.warning = \"warning\";\n  }\n};\nvar outlineTypeTable = /* @__PURE__ */ Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n  static _convertOptions(options) {\n    return {\n      ConvertTabsToSpaces: options.insertSpaces,\n      TabSize: options.tabSize,\n      IndentSize: options.tabSize,\n      IndentStyle: 2 /* Smart */,\n      NewLineCharacter: \"\\n\",\n      InsertSpaceAfterCommaDelimiter: true,\n      InsertSpaceAfterSemicolonInForStatements: true,\n      InsertSpaceBeforeAndAfterBinaryOperators: true,\n      InsertSpaceAfterKeywordsInControlFlowStatements: true,\n      InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n      InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n      PlaceOpenBraceOnNewLineForControlBlocks: false,\n      PlaceOpenBraceOnNewLineForFunctions: false\n    };\n  }\n  _convertTextChanges(model, change) {\n    return {\n      text: change.newText,\n      range: this._textSpanToRange(model, change.span)\n    };\n  }\n};\nvar FormatAdapter = class extends FormatHelper {\n  constructor() {\n    super(...arguments);\n    this.canFormatMultipleRanges = false;\n  }\n  async provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    const startOffset = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const endOffset = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsForRange(\n      resource.toString(),\n      startOffset,\n      endOffset,\n      FormatHelper._convertOptions(options)\n    );\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n  get autoFormatTriggerCharacters() {\n    return [\";\", \"}\", \"\\n\"];\n  }\n  async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsAfterKeystroke(\n      resource.toString(),\n      offset,\n      ch,\n      FormatHelper._convertOptions(options)\n    );\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n  async provideCodeActions(model, range, context, token) {\n    const resource = model.uri;\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const formatOptions = FormatHelper._convertOptions(model.getOptions());\n    const errorCodes = context.markers.filter((m) => m.code).map((m) => m.code).map(Number);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const codeFixes = await worker.getCodeFixesAtPosition(\n      resource.toString(),\n      start,\n      end,\n      errorCodes,\n      formatOptions\n    );\n    if (!codeFixes || model.isDisposed()) {\n      return { actions: [], dispose: () => {\n      } };\n    }\n    const actions = codeFixes.filter((fix) => {\n      return fix.changes.filter((change) => change.isNewFile).length === 0;\n    }).map((fix) => {\n      return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n    });\n    return {\n      actions,\n      dispose: () => {\n      }\n    };\n  }\n  _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n    const edits = [];\n    for (const change of codeFix.changes) {\n      for (const textChange of change.textChanges) {\n        edits.push({\n          resource: model.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model, textChange.span),\n            text: textChange.newText\n          }\n        });\n      }\n    }\n    const action = {\n      title: codeFix.description,\n      edit: { edits },\n      diagnostics: context.markers,\n      kind: \"quickfix\"\n    };\n    return action;\n  }\n};\nvar RenameAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const renameInfo = await worker.getRenameInfo(fileName, offset, {\n      allowRenameOfImportPath: false\n    });\n    if (renameInfo.canRename === false) {\n      return {\n        edits: [],\n        rejectReason: renameInfo.localizedErrorMessage\n      };\n    }\n    if (renameInfo.fileToRename !== void 0) {\n      throw new Error(\"Renaming files is not supported.\");\n    }\n    const renameLocations = await worker.findRenameLocations(\n      fileName,\n      offset,\n      /*strings*/\n      false,\n      /*comments*/\n      false,\n      /*prefixAndSuffix*/\n      false\n    );\n    if (!renameLocations || model.isDisposed()) {\n      return;\n    }\n    const edits = [];\n    for (const renameLocation of renameLocations) {\n      const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n      if (model2) {\n        edits.push({\n          resource: model2.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model2, renameLocation.textSpan),\n            text: newName\n          }\n        });\n      } else {\n        throw new Error(`Unknown file ${renameLocation.fileName}.`);\n      }\n    }\n    return { edits };\n  }\n};\nvar InlayHintsAdapter = class extends Adapter {\n  async provideInlayHints(model, range, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return null;\n    }\n    const tsHints = await worker.provideInlayHints(fileName, start, end);\n    const hints = tsHints.map((hint) => {\n      return {\n        ...hint,\n        label: hint.text,\n        position: model.getPositionAt(hint.position),\n        kind: this._convertHintKind(hint.kind)\n      };\n    });\n    return { hints, dispose: () => {\n    } };\n  }\n  _convertHintKind(kind) {\n    switch (kind) {\n      case \"Parameter\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n      case \"Type\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n      default:\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n    }\n  }\n};\n\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n    resolve(javaScriptWorker);\n  });\n}\nfunction getTypeScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n    resolve(typeScriptWorker);\n  });\n}\nfunction setupMode(defaults, modeId) {\n  const disposables = [];\n  const providers = [];\n  const client = new WorkerManager(modeId, defaults);\n  disposables.push(client);\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n  const libFiles = new LibFiles(worker);\n  function registerProviders() {\n    const { modeConfiguration } = defaults;\n    disposeAll(providers);\n    if (modeConfiguration.completionItems) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerCompletionItemProvider(\n          modeId,\n          new SuggestAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.signatureHelp) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerSignatureHelpProvider(\n          modeId,\n          new SignatureHelpAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.hovers) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker))\n      );\n    }\n    if (modeConfiguration.documentHighlights) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDocumentHighlightProvider(\n          modeId,\n          new DocumentHighlightAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.definitions) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDefinitionProvider(\n          modeId,\n          new DefinitionAdapter(libFiles, worker)\n        )\n      );\n    }\n    if (modeConfiguration.references) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerReferenceProvider(\n          modeId,\n          new ReferenceAdapter(libFiles, worker)\n        )\n      );\n    }\n    if (modeConfiguration.documentSymbols) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDocumentSymbolProvider(\n          modeId,\n          new OutlineAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.rename) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerRenameProvider(\n          modeId,\n          new RenameAdapter(libFiles, worker)\n        )\n      );\n    }\n    if (modeConfiguration.documentRangeFormattingEdits) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(\n          modeId,\n          new FormatAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.onTypeFormattingEdits) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(\n          modeId,\n          new FormatOnTypeAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.codeActions) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker))\n      );\n    }\n    if (modeConfiguration.inlayHints) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker))\n      );\n    }\n    if (modeConfiguration.diagnostics) {\n      providers.push(new DiagnosticsAdapter(libFiles, defaults, modeId, worker));\n    }\n  }\n  registerProviders();\n  disposables.push(asDisposable(providers));\n  return worker;\n}\nfunction asDisposable(disposables) {\n  return { dispose: () => disposeAll(disposables) };\n}\nfunction disposeAll(disposables) {\n  while (disposables.length) {\n    disposables.pop().dispose();\n  }\n}\nexport {\n  Adapter,\n  CodeActionAdaptor,\n  DefinitionAdapter,\n  DiagnosticsAdapter,\n  DocumentHighlightAdapter,\n  FormatAdapter,\n  FormatHelper,\n  FormatOnTypeAdapter,\n  InlayHintsAdapter,\n  Kind,\n  LibFiles,\n  OutlineAdapter,\n  QuickInfoAdapter,\n  ReferenceAdapter,\n  RenameAdapter,\n  SignatureHelpAdapter,\n  SuggestAdapter,\n  WorkerManager,\n  flattenDiagnosticMessageText,\n  getJavaScriptWorker,\n  getTypeScriptWorker,\n  setupJavaScript,\n  setupTypeScript\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}