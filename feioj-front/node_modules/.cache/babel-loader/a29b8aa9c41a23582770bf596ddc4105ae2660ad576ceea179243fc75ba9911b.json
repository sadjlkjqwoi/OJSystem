{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar PostEditWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { toAction } from '../../../../base/common/actions.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport './postEditWidget.css';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { createCombinedWorkspaceEdit } from './edit.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet PostEditWidget = PostEditWidget_1 = class PostEditWidget extends Disposable {\n  constructor(typeId, editor, visibleContext, showCommand, range, edits, onSelectNewEdit, _contextMenuService, contextKeyService, _keybindingService) {\n    super();\n    this.typeId = typeId;\n    this.editor = editor;\n    this.showCommand = showCommand;\n    this.range = range;\n    this.edits = edits;\n    this.onSelectNewEdit = onSelectNewEdit;\n    this._contextMenuService = _contextMenuService;\n    this._keybindingService = _keybindingService;\n    this.allowEditorOverflow = true;\n    this.suppressMouseDown = true;\n    this.create();\n    this.visibleContext = visibleContext.bindTo(contextKeyService);\n    this.visibleContext.set(true);\n    this._register(toDisposable(() => this.visibleContext.reset()));\n    this.editor.addContentWidget(this);\n    this.editor.layoutContentWidget(this);\n    this._register(toDisposable(() => this.editor.removeContentWidget(this)));\n    this._register(this.editor.onDidChangeCursorPosition(e => {\n      if (!range.containsPosition(e.position)) {\n        this.dispose();\n      }\n    }));\n    this._register(Event.runAndSubscribe(_keybindingService.onDidUpdateKeybindings, () => {\n      this._updateButtonTitle();\n    }));\n  }\n  _updateButtonTitle() {\n    var _a;\n    const binding = (_a = this._keybindingService.lookupKeybinding(this.showCommand.id)) === null || _a === void 0 ? void 0 : _a.getLabel();\n    this.button.element.title = this.showCommand.label + (binding ? ` (${binding})` : '');\n  }\n  create() {\n    this.domNode = dom.$('.post-edit-widget');\n    this.button = this._register(new Button(this.domNode, {\n      supportIcons: true\n    }));\n    this.button.label = '$(insert)';\n    this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, () => this.showSelector()));\n  }\n  getId() {\n    return PostEditWidget_1.baseId + '.' + this.typeId;\n  }\n  getDomNode() {\n    return this.domNode;\n  }\n  getPosition() {\n    return {\n      position: this.range.getEndPosition(),\n      preference: [2 /* ContentWidgetPositionPreference.BELOW */]\n    };\n  }\n  showSelector() {\n    this._contextMenuService.showContextMenu({\n      getAnchor: () => {\n        const pos = dom.getDomNodePagePosition(this.button.element);\n        return {\n          x: pos.left + pos.width,\n          y: pos.top + pos.height\n        };\n      },\n      getActions: () => {\n        return this.edits.allEdits.map((edit, i) => toAction({\n          id: '',\n          label: edit.label,\n          checked: i === this.edits.activeEditIndex,\n          run: () => {\n            if (i !== this.edits.activeEditIndex) {\n              return this.onSelectNewEdit(i);\n            }\n          }\n        }));\n      }\n    });\n  }\n};\nPostEditWidget.baseId = 'editor.widget.postEditWidget';\nPostEditWidget = PostEditWidget_1 = __decorate([__param(7, IContextMenuService), __param(8, IContextKeyService), __param(9, IKeybindingService)], PostEditWidget);\nlet PostEditWidgetManager = class PostEditWidgetManager extends Disposable {\n  constructor(_id, _editor, _visibleContext, _showCommand, _instantiationService, _bulkEditService) {\n    super();\n    this._id = _id;\n    this._editor = _editor;\n    this._visibleContext = _visibleContext;\n    this._showCommand = _showCommand;\n    this._instantiationService = _instantiationService;\n    this._bulkEditService = _bulkEditService;\n    this._currentWidget = this._register(new MutableDisposable());\n    this._register(Event.any(_editor.onDidChangeModel, _editor.onDidChangeModelContent)(() => this.clear()));\n  }\n  async applyEditAndShowIfNeeded(ranges, edits, canShowWidget, token) {\n    const model = this._editor.getModel();\n    if (!model || !ranges.length) {\n      return;\n    }\n    const edit = edits.allEdits[edits.activeEditIndex];\n    if (!edit) {\n      return;\n    }\n    const combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, ranges, edit);\n    // Use a decoration to track edits around the trigger range\n    const primaryRange = ranges[0];\n    const editTrackingDecoration = model.deltaDecorations([], [{\n      range: primaryRange,\n      options: {\n        description: 'paste-line-suffix',\n        stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */\n      }\n    }]);\n    let editResult;\n    let editRange;\n    try {\n      editResult = await this._bulkEditService.apply(combinedWorkspaceEdit, {\n        editor: this._editor,\n        token\n      });\n      editRange = model.getDecorationRange(editTrackingDecoration[0]);\n    } finally {\n      model.deltaDecorations(editTrackingDecoration, []);\n    }\n    if (canShowWidget && editResult.isApplied && edits.allEdits.length > 1) {\n      this.show(editRange !== null && editRange !== void 0 ? editRange : primaryRange, edits, async newEditIndex => {\n        const model = this._editor.getModel();\n        if (!model) {\n          return;\n        }\n        await model.undo();\n        this.applyEditAndShowIfNeeded(ranges, {\n          activeEditIndex: newEditIndex,\n          allEdits: edits.allEdits\n        }, canShowWidget, token);\n      });\n    }\n  }\n  show(range, edits, onDidSelectEdit) {\n    this.clear();\n    if (this._editor.hasModel()) {\n      this._currentWidget.value = this._instantiationService.createInstance(PostEditWidget, this._id, this._editor, this._visibleContext, this._showCommand, range, edits, onDidSelectEdit);\n    }\n  }\n  clear() {\n    this._currentWidget.clear();\n  }\n  tryShowSelector() {\n    var _a;\n    (_a = this._currentWidget.value) === null || _a === void 0 ? void 0 : _a.showSelector();\n  }\n};\nPostEditWidgetManager = __decorate([__param(4, IInstantiationService), __param(5, IBulkEditService)], PostEditWidgetManager);\nexport { PostEditWidgetManager };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","PostEditWidget_1","dom","Button","toAction","Event","Disposable","MutableDisposable","toDisposable","IBulkEditService","createCombinedWorkspaceEdit","IContextKeyService","IContextMenuService","IInstantiationService","IKeybindingService","PostEditWidget","constructor","typeId","editor","visibleContext","showCommand","range","edits","onSelectNewEdit","_contextMenuService","contextKeyService","_keybindingService","allowEditorOverflow","suppressMouseDown","create","bindTo","set","_register","reset","addContentWidget","layoutContentWidget","removeContentWidget","onDidChangeCursorPosition","e","containsPosition","position","dispose","runAndSubscribe","onDidUpdateKeybindings","_updateButtonTitle","_a","binding","lookupKeybinding","id","getLabel","button","element","title","label","domNode","$","supportIcons","addDisposableListener","EventType","CLICK","showSelector","getId","baseId","getDomNode","getPosition","getEndPosition","preference","showContextMenu","getAnchor","pos","getDomNodePagePosition","x","left","width","y","top","height","getActions","allEdits","map","edit","checked","activeEditIndex","run","PostEditWidgetManager","_id","_editor","_visibleContext","_showCommand","_instantiationService","_bulkEditService","_currentWidget","any","onDidChangeModel","onDidChangeModelContent","clear","applyEditAndShowIfNeeded","ranges","canShowWidget","token","model","getModel","combinedWorkspaceEdit","uri","primaryRange","editTrackingDecoration","deltaDecorations","options","description","stickiness","editResult","editRange","apply","getDecorationRange","isApplied","show","newEditIndex","undo","onDidSelectEdit","hasModel","value","createInstance","tryShowSelector"],"sources":["D:/PersonalFiles/yupi/OJSystem/OJSystem/feioj-front/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/postEditWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar PostEditWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { toAction } from '../../../../base/common/actions.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport './postEditWidget.css';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { createCombinedWorkspaceEdit } from './edit.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet PostEditWidget = PostEditWidget_1 = class PostEditWidget extends Disposable {\n    constructor(typeId, editor, visibleContext, showCommand, range, edits, onSelectNewEdit, _contextMenuService, contextKeyService, _keybindingService) {\n        super();\n        this.typeId = typeId;\n        this.editor = editor;\n        this.showCommand = showCommand;\n        this.range = range;\n        this.edits = edits;\n        this.onSelectNewEdit = onSelectNewEdit;\n        this._contextMenuService = _contextMenuService;\n        this._keybindingService = _keybindingService;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = true;\n        this.create();\n        this.visibleContext = visibleContext.bindTo(contextKeyService);\n        this.visibleContext.set(true);\n        this._register(toDisposable(() => this.visibleContext.reset()));\n        this.editor.addContentWidget(this);\n        this.editor.layoutContentWidget(this);\n        this._register(toDisposable((() => this.editor.removeContentWidget(this))));\n        this._register(this.editor.onDidChangeCursorPosition(e => {\n            if (!range.containsPosition(e.position)) {\n                this.dispose();\n            }\n        }));\n        this._register(Event.runAndSubscribe(_keybindingService.onDidUpdateKeybindings, () => {\n            this._updateButtonTitle();\n        }));\n    }\n    _updateButtonTitle() {\n        var _a;\n        const binding = (_a = this._keybindingService.lookupKeybinding(this.showCommand.id)) === null || _a === void 0 ? void 0 : _a.getLabel();\n        this.button.element.title = this.showCommand.label + (binding ? ` (${binding})` : '');\n    }\n    create() {\n        this.domNode = dom.$('.post-edit-widget');\n        this.button = this._register(new Button(this.domNode, {\n            supportIcons: true,\n        }));\n        this.button.label = '$(insert)';\n        this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, () => this.showSelector()));\n    }\n    getId() {\n        return PostEditWidget_1.baseId + '.' + this.typeId;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.range.getEndPosition(),\n            preference: [2 /* ContentWidgetPositionPreference.BELOW */]\n        };\n    }\n    showSelector() {\n        this._contextMenuService.showContextMenu({\n            getAnchor: () => {\n                const pos = dom.getDomNodePagePosition(this.button.element);\n                return { x: pos.left + pos.width, y: pos.top + pos.height };\n            },\n            getActions: () => {\n                return this.edits.allEdits.map((edit, i) => toAction({\n                    id: '',\n                    label: edit.label,\n                    checked: i === this.edits.activeEditIndex,\n                    run: () => {\n                        if (i !== this.edits.activeEditIndex) {\n                            return this.onSelectNewEdit(i);\n                        }\n                    },\n                }));\n            }\n        });\n    }\n};\nPostEditWidget.baseId = 'editor.widget.postEditWidget';\nPostEditWidget = PostEditWidget_1 = __decorate([\n    __param(7, IContextMenuService),\n    __param(8, IContextKeyService),\n    __param(9, IKeybindingService)\n], PostEditWidget);\nlet PostEditWidgetManager = class PostEditWidgetManager extends Disposable {\n    constructor(_id, _editor, _visibleContext, _showCommand, _instantiationService, _bulkEditService) {\n        super();\n        this._id = _id;\n        this._editor = _editor;\n        this._visibleContext = _visibleContext;\n        this._showCommand = _showCommand;\n        this._instantiationService = _instantiationService;\n        this._bulkEditService = _bulkEditService;\n        this._currentWidget = this._register(new MutableDisposable());\n        this._register(Event.any(_editor.onDidChangeModel, _editor.onDidChangeModelContent)(() => this.clear()));\n    }\n    async applyEditAndShowIfNeeded(ranges, edits, canShowWidget, token) {\n        const model = this._editor.getModel();\n        if (!model || !ranges.length) {\n            return;\n        }\n        const edit = edits.allEdits[edits.activeEditIndex];\n        if (!edit) {\n            return;\n        }\n        const combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, ranges, edit);\n        // Use a decoration to track edits around the trigger range\n        const primaryRange = ranges[0];\n        const editTrackingDecoration = model.deltaDecorations([], [{\n                range: primaryRange,\n                options: { description: 'paste-line-suffix', stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */ }\n            }]);\n        let editResult;\n        let editRange;\n        try {\n            editResult = await this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor, token });\n            editRange = model.getDecorationRange(editTrackingDecoration[0]);\n        }\n        finally {\n            model.deltaDecorations(editTrackingDecoration, []);\n        }\n        if (canShowWidget && editResult.isApplied && edits.allEdits.length > 1) {\n            this.show(editRange !== null && editRange !== void 0 ? editRange : primaryRange, edits, async (newEditIndex) => {\n                const model = this._editor.getModel();\n                if (!model) {\n                    return;\n                }\n                await model.undo();\n                this.applyEditAndShowIfNeeded(ranges, { activeEditIndex: newEditIndex, allEdits: edits.allEdits }, canShowWidget, token);\n            });\n        }\n    }\n    show(range, edits, onDidSelectEdit) {\n        this.clear();\n        if (this._editor.hasModel()) {\n            this._currentWidget.value = this._instantiationService.createInstance(PostEditWidget, this._id, this._editor, this._visibleContext, this._showCommand, range, edits, onDidSelectEdit);\n        }\n    }\n    clear() {\n        this._currentWidget.clear();\n    }\n    tryShowSelector() {\n        var _a;\n        (_a = this._currentWidget.value) === null || _a === void 0 ? void 0 : _a.showSelector();\n    }\n};\nPostEditWidgetManager = __decorate([\n    __param(4, IInstantiationService),\n    __param(5, IBulkEditService)\n], PostEditWidgetManager);\nexport { PostEditWidgetManager };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}