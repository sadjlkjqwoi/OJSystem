{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../../browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { GlyphMarginLane } from '../../../common/model.js';\nconst $ = dom.$;\nexport class MarginHoverWidget extends Disposable {\n  constructor(editor, languageService, openerService) {\n    super();\n    this._renderDisposeables = this._register(new DisposableStore());\n    this._editor = editor;\n    this._isVisible = false;\n    this._messages = [];\n    this._hover = this._register(new HoverWidget());\n    this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    this._markdownRenderer = this._register(new MarkdownRenderer({\n      editor: this._editor\n    }, languageService, openerService));\n    this._computer = new MarginHoverComputer(this._editor);\n    this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n    this._register(this._hoverOperation.onResult(result => {\n      this._withResult(result.value);\n    }));\n    this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n    this._register(this._editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n        this._updateFont();\n      }\n    }));\n    this._editor.addOverlayWidget(this);\n  }\n  dispose() {\n    this._editor.removeOverlayWidget(this);\n    super.dispose();\n  }\n  getId() {\n    return MarginHoverWidget.ID;\n  }\n  getDomNode() {\n    return this._hover.containerDomNode;\n  }\n  getPosition() {\n    return null;\n  }\n  _updateFont() {\n    const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n    codeClasses.forEach(node => this._editor.applyFontInfo(node));\n  }\n  _onModelDecorationsChanged() {\n    if (this._isVisible) {\n      // The decorations have changed and the hover is visible,\n      // we need to recompute the displayed text\n      this._hoverOperation.cancel();\n      this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n  }\n  startShowingAt(lineNumber, laneOrLine) {\n    if (this._computer.lineNumber === lineNumber && this._computer.lane === laneOrLine) {\n      // We have to show the widget at the exact same line number as before, so no work is needed\n      return;\n    }\n    this._hoverOperation.cancel();\n    this.hide();\n    this._computer.lineNumber = lineNumber;\n    this._computer.lane = laneOrLine;\n    this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n  }\n  hide() {\n    this._computer.lineNumber = -1;\n    this._hoverOperation.cancel();\n    if (!this._isVisible) {\n      return;\n    }\n    this._isVisible = false;\n    this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n  }\n  _withResult(result) {\n    this._messages = result;\n    if (this._messages.length > 0) {\n      this._renderMessages(this._computer.lineNumber, this._messages);\n    } else {\n      this.hide();\n    }\n  }\n  _renderMessages(lineNumber, messages) {\n    this._renderDisposeables.clear();\n    const fragment = document.createDocumentFragment();\n    for (const msg of messages) {\n      const markdownHoverElement = $('div.hover-row.markdown-hover');\n      const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n      const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n      hoverContentsElement.appendChild(renderedContents.element);\n      fragment.appendChild(markdownHoverElement);\n    }\n    this._updateContents(fragment);\n    this._showAt(lineNumber);\n  }\n  _updateContents(node) {\n    this._hover.contentsDomNode.textContent = '';\n    this._hover.contentsDomNode.appendChild(node);\n    this._updateFont();\n  }\n  _showAt(lineNumber) {\n    if (!this._isVisible) {\n      this._isVisible = true;\n      this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    const editorLayout = this._editor.getLayoutInfo();\n    const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n    const editorScrollTop = this._editor.getScrollTop();\n    const lineHeight = this._editor.getOption(66 /* EditorOption.lineHeight */);\n    const nodeHeight = this._hover.containerDomNode.clientHeight;\n    const top = topForLineNumber - editorScrollTop - (nodeHeight - lineHeight) / 2;\n    const left = editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth + (this._computer.lane === 'lineNo' ? editorLayout.lineNumbersWidth : 0);\n    this._hover.containerDomNode.style.left = `${left}px`;\n    this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n  }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nclass MarginHoverComputer {\n  get lineNumber() {\n    return this._lineNumber;\n  }\n  set lineNumber(value) {\n    this._lineNumber = value;\n  }\n  get lane() {\n    return this._laneOrLine;\n  }\n  set lane(value) {\n    this._laneOrLine = value;\n  }\n  constructor(_editor) {\n    this._editor = _editor;\n    this._lineNumber = -1;\n    this._laneOrLine = GlyphMarginLane.Center;\n  }\n  computeSync() {\n    var _a, _b;\n    const toHoverMessage = contents => {\n      return {\n        value: contents\n      };\n    };\n    const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n    const result = [];\n    const isLineHover = this._laneOrLine === 'lineNo';\n    if (!lineDecorations) {\n      return result;\n    }\n    for (const d of lineDecorations) {\n      const lane = (_b = (_a = d.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : GlyphMarginLane.Center;\n      if (!isLineHover && lane !== this._laneOrLine) {\n        continue;\n      }\n      const hoverMessage = isLineHover ? d.options.lineNumberHoverMessage : d.options.glyphMarginHoverMessage;\n      if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n        continue;\n      }\n      result.push(...asArray(hoverMessage).map(toHoverMessage));\n    }\n    return result;\n  }\n}","map":{"version":3,"names":["dom","asArray","isEmptyMarkdownString","Disposable","DisposableStore","MarkdownRenderer","HoverOperation","HoverWidget","GlyphMarginLane","$","MarginHoverWidget","constructor","editor","languageService","openerService","_renderDisposeables","_register","_editor","_isVisible","_messages","_hover","containerDomNode","classList","toggle","_markdownRenderer","_computer","MarginHoverComputer","_hoverOperation","onResult","result","_withResult","value","onDidChangeModelDecorations","_onModelDecorationsChanged","onDidChangeConfiguration","e","hasChanged","_updateFont","addOverlayWidget","dispose","removeOverlayWidget","getId","ID","getDomNode","getPosition","codeClasses","Array","prototype","slice","call","contentsDomNode","getElementsByClassName","forEach","node","applyFontInfo","cancel","start","startShowingAt","lineNumber","laneOrLine","lane","hide","length","_renderMessages","messages","clear","fragment","document","createDocumentFragment","msg","markdownHoverElement","hoverContentsElement","append","renderedContents","add","render","appendChild","element","_updateContents","_showAt","textContent","editorLayout","getLayoutInfo","topForLineNumber","getTopForLineNumber","editorScrollTop","getScrollTop","lineHeight","getOption","nodeHeight","clientHeight","top","left","glyphMarginLeft","glyphMarginWidth","lineNumbersWidth","style","Math","max","round","_lineNumber","_laneOrLine","Center","computeSync","_a","_b","toHoverMessage","contents","lineDecorations","getLineDecorations","isLineHover","d","options","glyphMargin","position","hoverMessage","lineNumberHoverMessage","glyphMarginHoverMessage","push","map"],"sources":["D:/PersonalFiles/yupi/OJSystem/OJSystem/feioj-front/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/marginHover.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../../browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { GlyphMarginLane } from '../../../common/model.js';\nconst $ = dom.$;\nexport class MarginHoverWidget extends Disposable {\n    constructor(editor, languageService, openerService) {\n        super();\n        this._renderDisposeables = this._register(new DisposableStore());\n        this._editor = editor;\n        this._isVisible = false;\n        this._messages = [];\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n        this._computer = new MarginHoverComputer(this._editor);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return MarginHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _onModelDecorationsChanged() {\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n        }\n    }\n    startShowingAt(lineNumber, laneOrLine) {\n        if (this._computer.lineNumber === lineNumber && this._computer.lane === laneOrLine) {\n            // We have to show the widget at the exact same line number as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this.hide();\n        this._computer.lineNumber = lineNumber;\n        this._computer.lane = laneOrLine;\n        this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n    hide() {\n        this._computer.lineNumber = -1;\n        this._hoverOperation.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    _withResult(result) {\n        this._messages = result;\n        if (this._messages.length > 0) {\n            this._renderMessages(this._computer.lineNumber, this._messages);\n        }\n        else {\n            this.hide();\n        }\n    }\n    _renderMessages(lineNumber, messages) {\n        this._renderDisposeables.clear();\n        const fragment = document.createDocumentFragment();\n        for (const msg of messages) {\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n            hoverContentsElement.appendChild(renderedContents.element);\n            fragment.appendChild(markdownHoverElement);\n        }\n        this._updateContents(fragment);\n        this._showAt(lineNumber);\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n    }\n    _showAt(lineNumber) {\n        if (!this._isVisible) {\n            this._isVisible = true;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        }\n        const editorLayout = this._editor.getLayoutInfo();\n        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n        const editorScrollTop = this._editor.getScrollTop();\n        const lineHeight = this._editor.getOption(66 /* EditorOption.lineHeight */);\n        const nodeHeight = this._hover.containerDomNode.clientHeight;\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        const left = editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth + (this._computer.lane === 'lineNo' ? editorLayout.lineNumbersWidth : 0);\n        this._hover.containerDomNode.style.left = `${left}px`;\n        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n    }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nclass MarginHoverComputer {\n    get lineNumber() {\n        return this._lineNumber;\n    }\n    set lineNumber(value) {\n        this._lineNumber = value;\n    }\n    get lane() {\n        return this._laneOrLine;\n    }\n    set lane(value) {\n        this._laneOrLine = value;\n    }\n    constructor(_editor) {\n        this._editor = _editor;\n        this._lineNumber = -1;\n        this._laneOrLine = GlyphMarginLane.Center;\n    }\n    computeSync() {\n        var _a, _b;\n        const toHoverMessage = (contents) => {\n            return {\n                value: contents\n            };\n        };\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n        const result = [];\n        const isLineHover = this._laneOrLine === 'lineNo';\n        if (!lineDecorations) {\n            return result;\n        }\n        for (const d of lineDecorations) {\n            const lane = (_b = (_a = d.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : GlyphMarginLane.Center;\n            if (!isLineHover && lane !== this._laneOrLine) {\n                continue;\n            }\n            const hoverMessage = isLineHover ? d.options.lineNumberHoverMessage : d.options.glyphMarginHoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\n        }\n        return result;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}