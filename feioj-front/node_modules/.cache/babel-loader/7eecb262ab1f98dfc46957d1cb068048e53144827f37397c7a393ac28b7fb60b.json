{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar InlineCompletionsController_1;\nimport { createStyleSheet2 } from '../../../../base/browser/dom.js';\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunHandleChanges, constObservable, derived, disposableObservableValue, observableFromEvent, observableSignal, observableValue, transaction } from '../../../../base/common/observable.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel, VersionIdChangeReason } from './inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from './suggestWidgetInlineCompletionProvider.js';\nimport { localize } from '../../../../nls.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet InlineCompletionsController = InlineCompletionsController_1 = class InlineCompletionsController extends Disposable {\n  static get(editor) {\n    return editor.getContribution(InlineCompletionsController_1.ID);\n  }\n  constructor(editor, _instantiationService, _contextKeyService, _configurationService, _commandService, _debounceService, _languageFeaturesService, _audioCueService, _keybindingService) {\n    super();\n    this.editor = editor;\n    this._instantiationService = _instantiationService;\n    this._contextKeyService = _contextKeyService;\n    this._configurationService = _configurationService;\n    this._commandService = _commandService;\n    this._debounceService = _debounceService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._audioCueService = _audioCueService;\n    this._keybindingService = _keybindingService;\n    this.model = disposableObservableValue('inlineCompletionModel', undefined);\n    this._textModelVersionId = observableValue(this, -1);\n    this._cursorPosition = observableValue(this, new Position(1, 1));\n    this._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => {\n      var _a, _b;\n      return (_b = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.selectedInlineCompletion.get()) === null || _b === void 0 ? void 0 : _b.toSingleTextEdit(undefined);\n    }, tx => this.updateObservables(tx, VersionIdChangeReason.Other), item => {\n      transaction(tx => {\n        var _a;\n        /** @description InlineCompletionsController.handleSuggestAccepted */\n        this.updateObservables(tx, VersionIdChangeReason.Other);\n        (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.handleSuggestAccepted(item);\n      });\n    }));\n    this._enabled = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).enabled);\n    this._fontFamily = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).fontFamily);\n    this._ghostTextWidget = this._register(this._instantiationService.createInstance(GhostTextWidget, this.editor, {\n      ghostText: this.model.map((v, reader) => /** ghostText */v === null || v === void 0 ? void 0 : v.ghostText.read(reader)),\n      minReservedLineCount: constObservable(0),\n      targetTextModel: this.model.map(v => v === null || v === void 0 ? void 0 : v.textModel)\n    }));\n    this._debounceValue = this._debounceService.for(this._languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', {\n      min: 50,\n      max: 50\n    });\n    this._playAudioCueSignal = observableSignal(this);\n    this._isReadonly = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(90 /* EditorOption.readOnly */));\n    this._textModel = observableFromEvent(this.editor.onDidChangeModel, () => this.editor.getModel());\n    this._textModelIfWritable = derived(reader => this._isReadonly.read(reader) ? undefined : this._textModel.read(reader));\n    this._register(new InlineCompletionContextKeys(this._contextKeyService, this.model));\n    this._register(autorun(reader => {\n      /** @description InlineCompletionsController.update model */\n      const textModel = this._textModelIfWritable.read(reader);\n      transaction(tx => {\n        /** @description InlineCompletionsController.onDidChangeModel/readonly */\n        this.model.set(undefined, tx);\n        this.updateObservables(tx, VersionIdChangeReason.Other);\n        if (textModel) {\n          const model = _instantiationService.createInstance(InlineCompletionsModel, textModel, this._suggestWidgetAdaptor.selectedItem, this._cursorPosition, this._textModelVersionId, this._debounceValue, observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(117 /* EditorOption.suggest */).preview), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(117 /* EditorOption.suggest */).previewMode), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(62 /* EditorOption.inlineSuggest */).mode), this._enabled);\n          this.model.set(model, tx);\n        }\n      });\n    }));\n    const styleElement = this._register(createStyleSheet2());\n    this._register(autorun(reader => {\n      const fontFamily = this._fontFamily.read(reader);\n      styleElement.setStyle(fontFamily === '' || fontFamily === 'default' ? `` : `\n.monaco-editor .ghost-text-decoration,\n.monaco-editor .ghost-text-decoration-preview,\n.monaco-editor .ghost-text {\n\tfont-family: ${fontFamily};\n}`);\n    }));\n    const getReason = e => {\n      var _a;\n      if (e.isUndoing) {\n        return VersionIdChangeReason.Undo;\n      }\n      if (e.isRedoing) {\n        return VersionIdChangeReason.Redo;\n      }\n      if ((_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.isAcceptingPartially) {\n        return VersionIdChangeReason.AcceptWord;\n      }\n      return VersionIdChangeReason.Other;\n    };\n    this._register(editor.onDidChangeModelContent(e => transaction(tx => /** @description InlineCompletionsController.onDidChangeModelContent */\n    this.updateObservables(tx, getReason(e)))));\n    this._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\n      var _a;\n      /** @description InlineCompletionsController.onDidChangeCursorPosition */\n      this.updateObservables(tx, VersionIdChangeReason.Other);\n      if (e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api') {\n        (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n      }\n    })));\n    this._register(editor.onDidType(() => transaction(tx => {\n      var _a;\n      /** @description InlineCompletionsController.onDidType */\n      this.updateObservables(tx, VersionIdChangeReason.Other);\n      if (this._enabled.get()) {\n        (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n      }\n    })));\n    this._register(this._commandService.onDidExecuteCommand(e => {\n      // These commands don't trigger onDidType.\n      const commands = new Set([CoreEditingCommands.Tab.id, CoreEditingCommands.DeleteLeft.id, CoreEditingCommands.DeleteRight.id, inlineSuggestCommitId, 'acceptSelectedSuggestion']);\n      if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n        transaction(tx => {\n          var _a;\n          /** @description onDidExecuteCommand */\n          (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n        });\n      }\n    }));\n    this._register(this.editor.onDidBlurEditorWidget(() => {\n      // This is a hidden setting very useful for debugging\n      if (this._contextKeyService.getContextKeyValue('accessibleViewIsShown') || this._configurationService.getValue('editor.inlineSuggest.keepOnBlur') || editor.getOption(62 /* EditorOption.inlineSuggest */).keepOnBlur) {\n        return;\n      }\n      if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n        return;\n      }\n      transaction(tx => {\n        var _a;\n        /** @description InlineCompletionsController.onDidBlurEditorWidget */\n        (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n      });\n    }));\n    this._register(autorun(reader => {\n      var _a;\n      /** @description InlineCompletionsController.forceRenderingAbove */\n      const state = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.state.read(reader);\n      if (state === null || state === void 0 ? void 0 : state.suggestItem) {\n        if (state.ghostText.lineCount >= 2) {\n          this._suggestWidgetAdaptor.forceRenderingAbove();\n        }\n      } else {\n        this._suggestWidgetAdaptor.stopForceRenderingAbove();\n      }\n    }));\n    this._register(toDisposable(() => {\n      this._suggestWidgetAdaptor.stopForceRenderingAbove();\n    }));\n    let lastInlineCompletionId = undefined;\n    this._register(autorunHandleChanges({\n      handleChange: (context, changeSummary) => {\n        if (context.didChange(this._playAudioCueSignal)) {\n          lastInlineCompletionId = undefined;\n        }\n        return true;\n      }\n    }, async reader => {\n      /** @description InlineCompletionsController.playAudioCueAndReadSuggestion */\n      this._playAudioCueSignal.read(reader);\n      const model = this.model.read(reader);\n      const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n      if (!model || !state || !state.inlineCompletion) {\n        lastInlineCompletionId = undefined;\n        return;\n      }\n      if (state.inlineCompletion.semanticId !== lastInlineCompletionId) {\n        lastInlineCompletionId = state.inlineCompletion.semanticId;\n        const lineText = model.textModel.getLineContent(state.ghostText.lineNumber);\n        this._audioCueService.playAudioCue(AudioCue.inlineSuggestion).then(() => {\n          if (this.editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n            this.provideScreenReaderUpdate(state.ghostText.renderForScreenReader(lineText));\n          }\n        });\n      }\n    }));\n    this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this._instantiationService));\n    this._register(this._configurationService.onDidChangeConfiguration(e => {\n      if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n        this.editor.updateOptions({\n          inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions')\n        });\n      }\n    }));\n    this.editor.updateOptions({\n      inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions')\n    });\n  }\n  playAudioCue(tx) {\n    this._playAudioCueSignal.trigger(tx);\n  }\n  provideScreenReaderUpdate(content) {\n    const accessibleViewShowing = this._contextKeyService.getContextKeyValue('accessibleViewIsShown');\n    const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n    let hint;\n    if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(147 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\n      hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n    }\n    hint ? alert(content + ', ' + hint) : alert(content);\n  }\n  /**\n   * Copies over the relevant state from the text model to observables.\n   * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\n   * regardless of who calls into us.\n   */\n  updateObservables(tx, changeReason) {\n    var _a, _b;\n    const newModel = this.editor.getModel();\n    this._textModelVersionId.set((_a = newModel === null || newModel === void 0 ? void 0 : newModel.getVersionId()) !== null && _a !== void 0 ? _a : -1, tx, changeReason);\n    this._cursorPosition.set((_b = this.editor.getPosition()) !== null && _b !== void 0 ? _b : new Position(1, 1), tx);\n  }\n  shouldShowHoverAt(range) {\n    var _a;\n    const ghostText = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.ghostText.get();\n    if (ghostText) {\n      return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n    }\n    return false;\n  }\n  shouldShowHoverAtViewZone(viewZoneId) {\n    return this._ghostTextWidget.ownsViewZone(viewZoneId);\n  }\n};\nInlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController';\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([__param(1, IInstantiationService), __param(2, IContextKeyService), __param(3, IConfigurationService), __param(4, ICommandService), __param(5, ILanguageFeatureDebounceService), __param(6, ILanguageFeaturesService), __param(7, IAudioCueService), __param(8, IKeybindingService)], InlineCompletionsController);\nexport { InlineCompletionsController };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InlineCompletionsController_1","createStyleSheet2","alert","Disposable","toDisposable","autorun","autorunHandleChanges","constObservable","derived","disposableObservableValue","observableFromEvent","observableSignal","observableValue","transaction","CoreEditingCommands","Position","ILanguageFeatureDebounceService","ILanguageFeaturesService","inlineSuggestCommitId","GhostTextWidget","InlineCompletionContextKeys","InlineCompletionsHintsWidget","InlineSuggestionHintsContentWidget","InlineCompletionsModel","VersionIdChangeReason","SuggestWidgetAdaptor","localize","AudioCue","IAudioCueService","ICommandService","IConfigurationService","IContextKeyService","IInstantiationService","IKeybindingService","InlineCompletionsController","get","editor","getContribution","ID","constructor","_instantiationService","_contextKeyService","_configurationService","_commandService","_debounceService","_languageFeaturesService","_audioCueService","_keybindingService","model","undefined","_textModelVersionId","_cursorPosition","_suggestWidgetAdaptor","_register","_a","_b","selectedInlineCompletion","toSingleTextEdit","tx","updateObservables","Other","item","handleSuggestAccepted","_enabled","onDidChangeConfiguration","getOption","enabled","_fontFamily","fontFamily","_ghostTextWidget","createInstance","ghostText","map","v","reader","read","minReservedLineCount","targetTextModel","textModel","_debounceValue","for","inlineCompletionsProvider","min","max","_playAudioCueSignal","_isReadonly","_textModel","onDidChangeModel","getModel","_textModelIfWritable","set","selectedItem","preview","previewMode","mode","styleElement","setStyle","getReason","e","isUndoing","Undo","isRedoing","Redo","isAcceptingPartially","AcceptWord","onDidChangeModelContent","onDidChangeCursorPosition","reason","source","stop","onDidType","trigger","onDidExecuteCommand","commands","Set","Tab","id","DeleteLeft","DeleteRight","has","commandId","hasTextFocus","onDidBlurEditorWidget","getContextKeyValue","getValue","keepOnBlur","dropDownVisible","state","suggestItem","lineCount","forceRenderingAbove","stopForceRenderingAbove","lastInlineCompletionId","handleChange","context","changeSummary","didChange","inlineCompletion","semanticId","lineText","getLineContent","lineNumber","playAudioCue","inlineSuggestion","then","provideScreenReaderUpdate","renderForScreenReader","affectsConfiguration","updateOptions","inlineCompletionsAccessibilityVerbose","content","accessibleViewShowing","accessibleViewKeybinding","lookupKeybinding","hint","getAriaLabel","changeReason","newModel","getVersionId","getPosition","shouldShowHoverAt","range","parts","some","p","containsPosition","column","shouldShowHoverAtViewZone","viewZoneId","ownsViewZone"],"sources":["D:/yupi/OJ System/OJ System/feioj-front/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineCompletionsController_1;\nimport { createStyleSheet2 } from '../../../../base/browser/dom.js';\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunHandleChanges, constObservable, derived, disposableObservableValue, observableFromEvent, observableSignal, observableValue, transaction } from '../../../../base/common/observable.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel, VersionIdChangeReason } from './inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from './suggestWidgetInlineCompletionProvider.js';\nimport { localize } from '../../../../nls.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet InlineCompletionsController = InlineCompletionsController_1 = class InlineCompletionsController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(InlineCompletionsController_1.ID);\n    }\n    constructor(editor, _instantiationService, _contextKeyService, _configurationService, _commandService, _debounceService, _languageFeaturesService, _audioCueService, _keybindingService) {\n        super();\n        this.editor = editor;\n        this._instantiationService = _instantiationService;\n        this._contextKeyService = _contextKeyService;\n        this._configurationService = _configurationService;\n        this._commandService = _commandService;\n        this._debounceService = _debounceService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._audioCueService = _audioCueService;\n        this._keybindingService = _keybindingService;\n        this.model = disposableObservableValue('inlineCompletionModel', undefined);\n        this._textModelVersionId = observableValue(this, -1);\n        this._cursorPosition = observableValue(this, new Position(1, 1));\n        this._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => { var _a, _b; return (_b = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.selectedInlineCompletion.get()) === null || _b === void 0 ? void 0 : _b.toSingleTextEdit(undefined); }, (tx) => this.updateObservables(tx, VersionIdChangeReason.Other), (item) => {\n            transaction(tx => {\n                var _a;\n                /** @description InlineCompletionsController.handleSuggestAccepted */\n                this.updateObservables(tx, VersionIdChangeReason.Other);\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.handleSuggestAccepted(item);\n            });\n        }));\n        this._enabled = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).enabled);\n        this._fontFamily = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).fontFamily);\n        this._ghostTextWidget = this._register(this._instantiationService.createInstance(GhostTextWidget, this.editor, {\n            ghostText: this.model.map((v, reader) => /** ghostText */ v === null || v === void 0 ? void 0 : v.ghostText.read(reader)),\n            minReservedLineCount: constObservable(0),\n            targetTextModel: this.model.map(v => v === null || v === void 0 ? void 0 : v.textModel),\n        }));\n        this._debounceValue = this._debounceService.for(this._languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this._playAudioCueSignal = observableSignal(this);\n        this._isReadonly = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(90 /* EditorOption.readOnly */));\n        this._textModel = observableFromEvent(this.editor.onDidChangeModel, () => this.editor.getModel());\n        this._textModelIfWritable = derived(reader => this._isReadonly.read(reader) ? undefined : this._textModel.read(reader));\n        this._register(new InlineCompletionContextKeys(this._contextKeyService, this.model));\n        this._register(autorun(reader => {\n            /** @description InlineCompletionsController.update model */\n            const textModel = this._textModelIfWritable.read(reader);\n            transaction(tx => {\n                /** @description InlineCompletionsController.onDidChangeModel/readonly */\n                this.model.set(undefined, tx);\n                this.updateObservables(tx, VersionIdChangeReason.Other);\n                if (textModel) {\n                    const model = _instantiationService.createInstance(InlineCompletionsModel, textModel, this._suggestWidgetAdaptor.selectedItem, this._cursorPosition, this._textModelVersionId, this._debounceValue, observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(117 /* EditorOption.suggest */).preview), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(117 /* EditorOption.suggest */).previewMode), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(62 /* EditorOption.inlineSuggest */).mode), this._enabled);\n                    this.model.set(model, tx);\n                }\n            });\n        }));\n        const styleElement = this._register(createStyleSheet2());\n        this._register(autorun(reader => {\n            const fontFamily = this._fontFamily.read(reader);\n            styleElement.setStyle(fontFamily === '' || fontFamily === 'default' ? `` : `\n.monaco-editor .ghost-text-decoration,\n.monaco-editor .ghost-text-decoration-preview,\n.monaco-editor .ghost-text {\n\tfont-family: ${fontFamily};\n}`);\n        }));\n        const getReason = (e) => {\n            var _a;\n            if (e.isUndoing) {\n                return VersionIdChangeReason.Undo;\n            }\n            if (e.isRedoing) {\n                return VersionIdChangeReason.Redo;\n            }\n            if ((_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.isAcceptingPartially) {\n                return VersionIdChangeReason.AcceptWord;\n            }\n            return VersionIdChangeReason.Other;\n        };\n        this._register(editor.onDidChangeModelContent((e) => transaction(tx => \n        /** @description InlineCompletionsController.onDidChangeModelContent */\n        this.updateObservables(tx, getReason(e)))));\n        this._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\n            var _a;\n            /** @description InlineCompletionsController.onDidChangeCursorPosition */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api') {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            }\n        })));\n        this._register(editor.onDidType(() => transaction(tx => {\n            var _a;\n            /** @description InlineCompletionsController.onDidType */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (this._enabled.get()) {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n            }\n        })));\n        this._register(this._commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n                transaction(tx => {\n                    var _a;\n                    /** @description onDidExecuteCommand */\n                    (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n                });\n            }\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (this._contextKeyService.getContextKeyValue('accessibleViewIsShown') || this._configurationService.getValue('editor.inlineSuggest.keepOnBlur') ||\n                editor.getOption(62 /* EditorOption.inlineSuggest */).keepOnBlur) {\n                return;\n            }\n            if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            transaction(tx => {\n                var _a;\n                /** @description InlineCompletionsController.onDidBlurEditorWidget */\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            });\n        }));\n        this._register(autorun(reader => {\n            var _a;\n            /** @description InlineCompletionsController.forceRenderingAbove */\n            const state = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.state.read(reader);\n            if (state === null || state === void 0 ? void 0 : state.suggestItem) {\n                if (state.ghostText.lineCount >= 2) {\n                    this._suggestWidgetAdaptor.forceRenderingAbove();\n                }\n            }\n            else {\n                this._suggestWidgetAdaptor.stopForceRenderingAbove();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this._suggestWidgetAdaptor.stopForceRenderingAbove();\n        }));\n        let lastInlineCompletionId = undefined;\n        this._register(autorunHandleChanges({\n            handleChange: (context, changeSummary) => {\n                if (context.didChange(this._playAudioCueSignal)) {\n                    lastInlineCompletionId = undefined;\n                }\n                return true;\n            },\n        }, async (reader) => {\n            /** @description InlineCompletionsController.playAudioCueAndReadSuggestion */\n            this._playAudioCueSignal.read(reader);\n            const model = this.model.read(reader);\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n            if (!model || !state || !state.inlineCompletion) {\n                lastInlineCompletionId = undefined;\n                return;\n            }\n            if (state.inlineCompletion.semanticId !== lastInlineCompletionId) {\n                lastInlineCompletionId = state.inlineCompletion.semanticId;\n                const lineText = model.textModel.getLineContent(state.ghostText.lineNumber);\n                this._audioCueService.playAudioCue(AudioCue.inlineSuggestion).then(() => {\n                    if (this.editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n                        this.provideScreenReaderUpdate(state.ghostText.renderForScreenReader(lineText));\n                    }\n                });\n            }\n        }));\n        this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this._instantiationService));\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n                this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n            }\n        }));\n        this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n    }\n    playAudioCue(tx) {\n        this._playAudioCueSignal.trigger(tx);\n    }\n    provideScreenReaderUpdate(content) {\n        const accessibleViewShowing = this._contextKeyService.getContextKeyValue('accessibleViewIsShown');\n        const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n        let hint;\n        if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(147 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\n            hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n        }\n        hint ? alert(content + ', ' + hint) : alert(content);\n    }\n    /**\n     * Copies over the relevant state from the text model to observables.\n     * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\n     * regardless of who calls into us.\n     */\n    updateObservables(tx, changeReason) {\n        var _a, _b;\n        const newModel = this.editor.getModel();\n        this._textModelVersionId.set((_a = newModel === null || newModel === void 0 ? void 0 : newModel.getVersionId()) !== null && _a !== void 0 ? _a : -1, tx, changeReason);\n        this._cursorPosition.set((_b = this.editor.getPosition()) !== null && _b !== void 0 ? _b : new Position(1, 1), tx);\n    }\n    shouldShowHoverAt(range) {\n        var _a;\n        const ghostText = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.ghostText.get();\n        if (ghostText) {\n            return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return this._ghostTextWidget.ownsViewZone(viewZoneId);\n    }\n};\nInlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController';\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService),\n    __param(3, IConfigurationService),\n    __param(4, ICommandService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, ILanguageFeaturesService),\n    __param(7, IAudioCueService),\n    __param(8, IKeybindingService)\n], InlineCompletionsController);\nexport { InlineCompletionsController };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}