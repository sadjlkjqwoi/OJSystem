{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ViewCompositionStartEvent {\n  constructor() {\n    this.type = 0 /* ViewEventType.ViewCompositionStart */;\n  }\n}\nexport class ViewCompositionEndEvent {\n  constructor() {\n    this.type = 1 /* ViewEventType.ViewCompositionEnd */;\n  }\n}\nexport class ViewConfigurationChangedEvent {\n  constructor(source) {\n    this.type = 2 /* ViewEventType.ViewConfigurationChanged */;\n    this._source = source;\n  }\n  hasChanged(id) {\n    return this._source.hasChanged(id);\n  }\n}\nexport class ViewCursorStateChangedEvent {\n  constructor(selections, modelSelections, reason) {\n    this.selections = selections;\n    this.modelSelections = modelSelections;\n    this.reason = reason;\n    this.type = 3 /* ViewEventType.ViewCursorStateChanged */;\n  }\n}\nexport class ViewDecorationsChangedEvent {\n  constructor(source) {\n    this.type = 4 /* ViewEventType.ViewDecorationsChanged */;\n    if (source) {\n      this.affectsMinimap = source.affectsMinimap;\n      this.affectsOverviewRuler = source.affectsOverviewRuler;\n      this.affectsGlyphMargin = source.affectsGlyphMargin;\n      this.affectsLineNumber = source.affectsLineNumber;\n    } else {\n      this.affectsMinimap = true;\n      this.affectsOverviewRuler = true;\n      this.affectsGlyphMargin = true;\n      this.affectsLineNumber = true;\n    }\n  }\n}\nexport class ViewFlushedEvent {\n  constructor() {\n    this.type = 5 /* ViewEventType.ViewFlushed */;\n    // Nothing to do\n  }\n}\nexport class ViewFocusChangedEvent {\n  constructor(isFocused) {\n    this.type = 6 /* ViewEventType.ViewFocusChanged */;\n    this.isFocused = isFocused;\n  }\n}\nexport class ViewLanguageConfigurationEvent {\n  constructor() {\n    this.type = 7 /* ViewEventType.ViewLanguageConfigurationChanged */;\n  }\n}\nexport class ViewLineMappingChangedEvent {\n  constructor() {\n    this.type = 8 /* ViewEventType.ViewLineMappingChanged */;\n    // Nothing to do\n  }\n}\nexport class ViewLinesChangedEvent {\n  constructor(\n  /**\n   * The first line that has changed.\n   */\n  fromLineNumber,\n  /**\n   * The number of lines that have changed.\n   */\n  count) {\n    this.fromLineNumber = fromLineNumber;\n    this.count = count;\n    this.type = 9 /* ViewEventType.ViewLinesChanged */;\n  }\n}\nexport class ViewLinesDeletedEvent {\n  constructor(fromLineNumber, toLineNumber) {\n    this.type = 10 /* ViewEventType.ViewLinesDeleted */;\n    this.fromLineNumber = fromLineNumber;\n    this.toLineNumber = toLineNumber;\n  }\n}\nexport class ViewLinesInsertedEvent {\n  constructor(fromLineNumber, toLineNumber) {\n    this.type = 11 /* ViewEventType.ViewLinesInserted */;\n    this.fromLineNumber = fromLineNumber;\n    this.toLineNumber = toLineNumber;\n  }\n}\nexport class ViewRevealRangeRequestEvent {\n  constructor(\n  /**\n   * Source of the call that caused the event.\n   */\n  source,\n  /**\n   * Reduce the revealing to a minimum (e.g. avoid scrolling if the bounding box is visible and near the viewport edge).\n   */\n  minimalReveal,\n  /**\n   * Range to be reavealed.\n   */\n  range,\n  /**\n   * Selections to be revealed.\n   */\n  selections,\n  /**\n   * The vertical reveal strategy.\n   */\n  verticalType,\n  /**\n   * If true: there should be a horizontal & vertical revealing.\n   * If false: there should be just a vertical revealing.\n   */\n  revealHorizontal,\n  /**\n   * The scroll type.\n   */\n  scrollType) {\n    this.source = source;\n    this.minimalReveal = minimalReveal;\n    this.range = range;\n    this.selections = selections;\n    this.verticalType = verticalType;\n    this.revealHorizontal = revealHorizontal;\n    this.scrollType = scrollType;\n    this.type = 12 /* ViewEventType.ViewRevealRangeRequest */;\n  }\n}\nexport class ViewScrollChangedEvent {\n  constructor(source) {\n    this.type = 13 /* ViewEventType.ViewScrollChanged */;\n    this.scrollWidth = source.scrollWidth;\n    this.scrollLeft = source.scrollLeft;\n    this.scrollHeight = source.scrollHeight;\n    this.scrollTop = source.scrollTop;\n    this.scrollWidthChanged = source.scrollWidthChanged;\n    this.scrollLeftChanged = source.scrollLeftChanged;\n    this.scrollHeightChanged = source.scrollHeightChanged;\n    this.scrollTopChanged = source.scrollTopChanged;\n  }\n}\nexport class ViewThemeChangedEvent {\n  constructor(theme) {\n    this.theme = theme;\n    this.type = 14 /* ViewEventType.ViewThemeChanged */;\n  }\n}\nexport class ViewTokensChangedEvent {\n  constructor(ranges) {\n    this.type = 15 /* ViewEventType.ViewTokensChanged */;\n    this.ranges = ranges;\n  }\n}\nexport class ViewTokensColorsChangedEvent {\n  constructor() {\n    this.type = 16 /* ViewEventType.ViewTokensColorsChanged */;\n    // Nothing to do\n  }\n}\nexport class ViewZonesChangedEvent {\n  constructor() {\n    this.type = 17 /* ViewEventType.ViewZonesChanged */;\n    // Nothing to do\n  }\n}","map":{"version":3,"names":["ViewCompositionStartEvent","constructor","type","ViewCompositionEndEvent","ViewConfigurationChangedEvent","source","_source","hasChanged","id","ViewCursorStateChangedEvent","selections","modelSelections","reason","ViewDecorationsChangedEvent","affectsMinimap","affectsOverviewRuler","affectsGlyphMargin","affectsLineNumber","ViewFlushedEvent","ViewFocusChangedEvent","isFocused","ViewLanguageConfigurationEvent","ViewLineMappingChangedEvent","ViewLinesChangedEvent","fromLineNumber","count","ViewLinesDeletedEvent","toLineNumber","ViewLinesInsertedEvent","ViewRevealRangeRequestEvent","minimalReveal","range","verticalType","revealHorizontal","scrollType","ViewScrollChangedEvent","scrollWidth","scrollLeft","scrollHeight","scrollTop","scrollWidthChanged","scrollLeftChanged","scrollHeightChanged","scrollTopChanged","ViewThemeChangedEvent","theme","ViewTokensChangedEvent","ranges","ViewTokensColorsChangedEvent","ViewZonesChangedEvent"],"sources":["D:/PersonalFiles/yupi/OJSystem/OJSystem/feioj-front/node_modules/monaco-editor/esm/vs/editor/common/viewEvents.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ViewCompositionStartEvent {\n    constructor() {\n        this.type = 0 /* ViewEventType.ViewCompositionStart */;\n    }\n}\nexport class ViewCompositionEndEvent {\n    constructor() {\n        this.type = 1 /* ViewEventType.ViewCompositionEnd */;\n    }\n}\nexport class ViewConfigurationChangedEvent {\n    constructor(source) {\n        this.type = 2 /* ViewEventType.ViewConfigurationChanged */;\n        this._source = source;\n    }\n    hasChanged(id) {\n        return this._source.hasChanged(id);\n    }\n}\nexport class ViewCursorStateChangedEvent {\n    constructor(selections, modelSelections, reason) {\n        this.selections = selections;\n        this.modelSelections = modelSelections;\n        this.reason = reason;\n        this.type = 3 /* ViewEventType.ViewCursorStateChanged */;\n    }\n}\nexport class ViewDecorationsChangedEvent {\n    constructor(source) {\n        this.type = 4 /* ViewEventType.ViewDecorationsChanged */;\n        if (source) {\n            this.affectsMinimap = source.affectsMinimap;\n            this.affectsOverviewRuler = source.affectsOverviewRuler;\n            this.affectsGlyphMargin = source.affectsGlyphMargin;\n            this.affectsLineNumber = source.affectsLineNumber;\n        }\n        else {\n            this.affectsMinimap = true;\n            this.affectsOverviewRuler = true;\n            this.affectsGlyphMargin = true;\n            this.affectsLineNumber = true;\n        }\n    }\n}\nexport class ViewFlushedEvent {\n    constructor() {\n        this.type = 5 /* ViewEventType.ViewFlushed */;\n        // Nothing to do\n    }\n}\nexport class ViewFocusChangedEvent {\n    constructor(isFocused) {\n        this.type = 6 /* ViewEventType.ViewFocusChanged */;\n        this.isFocused = isFocused;\n    }\n}\nexport class ViewLanguageConfigurationEvent {\n    constructor() {\n        this.type = 7 /* ViewEventType.ViewLanguageConfigurationChanged */;\n    }\n}\nexport class ViewLineMappingChangedEvent {\n    constructor() {\n        this.type = 8 /* ViewEventType.ViewLineMappingChanged */;\n        // Nothing to do\n    }\n}\nexport class ViewLinesChangedEvent {\n    constructor(\n    /**\n     * The first line that has changed.\n     */\n    fromLineNumber, \n    /**\n     * The number of lines that have changed.\n     */\n    count) {\n        this.fromLineNumber = fromLineNumber;\n        this.count = count;\n        this.type = 9 /* ViewEventType.ViewLinesChanged */;\n    }\n}\nexport class ViewLinesDeletedEvent {\n    constructor(fromLineNumber, toLineNumber) {\n        this.type = 10 /* ViewEventType.ViewLinesDeleted */;\n        this.fromLineNumber = fromLineNumber;\n        this.toLineNumber = toLineNumber;\n    }\n}\nexport class ViewLinesInsertedEvent {\n    constructor(fromLineNumber, toLineNumber) {\n        this.type = 11 /* ViewEventType.ViewLinesInserted */;\n        this.fromLineNumber = fromLineNumber;\n        this.toLineNumber = toLineNumber;\n    }\n}\nexport class ViewRevealRangeRequestEvent {\n    constructor(\n    /**\n     * Source of the call that caused the event.\n     */\n    source, \n    /**\n     * Reduce the revealing to a minimum (e.g. avoid scrolling if the bounding box is visible and near the viewport edge).\n     */\n    minimalReveal, \n    /**\n     * Range to be reavealed.\n     */\n    range, \n    /**\n     * Selections to be revealed.\n     */\n    selections, \n    /**\n     * The vertical reveal strategy.\n     */\n    verticalType, \n    /**\n     * If true: there should be a horizontal & vertical revealing.\n     * If false: there should be just a vertical revealing.\n     */\n    revealHorizontal, \n    /**\n     * The scroll type.\n     */\n    scrollType) {\n        this.source = source;\n        this.minimalReveal = minimalReveal;\n        this.range = range;\n        this.selections = selections;\n        this.verticalType = verticalType;\n        this.revealHorizontal = revealHorizontal;\n        this.scrollType = scrollType;\n        this.type = 12 /* ViewEventType.ViewRevealRangeRequest */;\n    }\n}\nexport class ViewScrollChangedEvent {\n    constructor(source) {\n        this.type = 13 /* ViewEventType.ViewScrollChanged */;\n        this.scrollWidth = source.scrollWidth;\n        this.scrollLeft = source.scrollLeft;\n        this.scrollHeight = source.scrollHeight;\n        this.scrollTop = source.scrollTop;\n        this.scrollWidthChanged = source.scrollWidthChanged;\n        this.scrollLeftChanged = source.scrollLeftChanged;\n        this.scrollHeightChanged = source.scrollHeightChanged;\n        this.scrollTopChanged = source.scrollTopChanged;\n    }\n}\nexport class ViewThemeChangedEvent {\n    constructor(theme) {\n        this.theme = theme;\n        this.type = 14 /* ViewEventType.ViewThemeChanged */;\n    }\n}\nexport class ViewTokensChangedEvent {\n    constructor(ranges) {\n        this.type = 15 /* ViewEventType.ViewTokensChanged */;\n        this.ranges = ranges;\n    }\n}\nexport class ViewTokensColorsChangedEvent {\n    constructor() {\n        this.type = 16 /* ViewEventType.ViewTokensColorsChanged */;\n        // Nothing to do\n    }\n}\nexport class ViewZonesChangedEvent {\n    constructor() {\n        this.type = 17 /* ViewEventType.ViewZonesChanged */;\n        // Nothing to do\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,MAAMA,yBAAyB,CAAC;EACnCC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;EAClB;AACJ;AACA,OAAO,MAAMC,uBAAuB,CAAC;EACjCF,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;EAClB;AACJ;AACA,OAAO,MAAME,6BAA6B,CAAC;EACvCH,WAAWA,CAACI,MAAM,EAAE;IAChB,IAAI,CAACH,IAAI,GAAG,CAAC,CAAC;IACd,IAAI,CAACI,OAAO,GAAGD,MAAM;EACzB;EACAE,UAAUA,CAACC,EAAE,EAAE;IACX,OAAO,IAAI,CAACF,OAAO,CAACC,UAAU,CAACC,EAAE,CAAC;EACtC;AACJ;AACA,OAAO,MAAMC,2BAA2B,CAAC;EACrCR,WAAWA,CAACS,UAAU,EAAEC,eAAe,EAAEC,MAAM,EAAE;IAC7C,IAAI,CAACF,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACV,IAAI,GAAG,CAAC,CAAC;EAClB;AACJ;AACA,OAAO,MAAMW,2BAA2B,CAAC;EACrCZ,WAAWA,CAACI,MAAM,EAAE;IAChB,IAAI,CAACH,IAAI,GAAG,CAAC,CAAC;IACd,IAAIG,MAAM,EAAE;MACR,IAAI,CAACS,cAAc,GAAGT,MAAM,CAACS,cAAc;MAC3C,IAAI,CAACC,oBAAoB,GAAGV,MAAM,CAACU,oBAAoB;MACvD,IAAI,CAACC,kBAAkB,GAAGX,MAAM,CAACW,kBAAkB;MACnD,IAAI,CAACC,iBAAiB,GAAGZ,MAAM,CAACY,iBAAiB;IACrD,CAAC,MACI;MACD,IAAI,CAACH,cAAc,GAAG,IAAI;MAC1B,IAAI,CAACC,oBAAoB,GAAG,IAAI;MAChC,IAAI,CAACC,kBAAkB,GAAG,IAAI;MAC9B,IAAI,CAACC,iBAAiB,GAAG,IAAI;IACjC;EACJ;AACJ;AACA,OAAO,MAAMC,gBAAgB,CAAC;EAC1BjB,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;IACd;EACJ;AACJ;AACA,OAAO,MAAMiB,qBAAqB,CAAC;EAC/BlB,WAAWA,CAACmB,SAAS,EAAE;IACnB,IAAI,CAAClB,IAAI,GAAG,CAAC,CAAC;IACd,IAAI,CAACkB,SAAS,GAAGA,SAAS;EAC9B;AACJ;AACA,OAAO,MAAMC,8BAA8B,CAAC;EACxCpB,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;EAClB;AACJ;AACA,OAAO,MAAMoB,2BAA2B,CAAC;EACrCrB,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;IACd;EACJ;AACJ;AACA,OAAO,MAAMqB,qBAAqB,CAAC;EAC/BtB,WAAWA;EACX;AACJ;AACA;EACIuB,cAAc;EACd;AACJ;AACA;EACIC,KAAK,EAAE;IACH,IAAI,CAACD,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACvB,IAAI,GAAG,CAAC,CAAC;EAClB;AACJ;AACA,OAAO,MAAMwB,qBAAqB,CAAC;EAC/BzB,WAAWA,CAACuB,cAAc,EAAEG,YAAY,EAAE;IACtC,IAAI,CAACzB,IAAI,GAAG,EAAE,CAAC;IACf,IAAI,CAACsB,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACG,YAAY,GAAGA,YAAY;EACpC;AACJ;AACA,OAAO,MAAMC,sBAAsB,CAAC;EAChC3B,WAAWA,CAACuB,cAAc,EAAEG,YAAY,EAAE;IACtC,IAAI,CAACzB,IAAI,GAAG,EAAE,CAAC;IACf,IAAI,CAACsB,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACG,YAAY,GAAGA,YAAY;EACpC;AACJ;AACA,OAAO,MAAME,2BAA2B,CAAC;EACrC5B,WAAWA;EACX;AACJ;AACA;EACII,MAAM;EACN;AACJ;AACA;EACIyB,aAAa;EACb;AACJ;AACA;EACIC,KAAK;EACL;AACJ;AACA;EACIrB,UAAU;EACV;AACJ;AACA;EACIsB,YAAY;EACZ;AACJ;AACA;AACA;EACIC,gBAAgB;EAChB;AACJ;AACA;EACIC,UAAU,EAAE;IACR,IAAI,CAAC7B,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACyB,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACrB,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACsB,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAAChC,IAAI,GAAG,EAAE,CAAC;EACnB;AACJ;AACA,OAAO,MAAMiC,sBAAsB,CAAC;EAChClC,WAAWA,CAACI,MAAM,EAAE;IAChB,IAAI,CAACH,IAAI,GAAG,EAAE,CAAC;IACf,IAAI,CAACkC,WAAW,GAAG/B,MAAM,CAAC+B,WAAW;IACrC,IAAI,CAACC,UAAU,GAAGhC,MAAM,CAACgC,UAAU;IACnC,IAAI,CAACC,YAAY,GAAGjC,MAAM,CAACiC,YAAY;IACvC,IAAI,CAACC,SAAS,GAAGlC,MAAM,CAACkC,SAAS;IACjC,IAAI,CAACC,kBAAkB,GAAGnC,MAAM,CAACmC,kBAAkB;IACnD,IAAI,CAACC,iBAAiB,GAAGpC,MAAM,CAACoC,iBAAiB;IACjD,IAAI,CAACC,mBAAmB,GAAGrC,MAAM,CAACqC,mBAAmB;IACrD,IAAI,CAACC,gBAAgB,GAAGtC,MAAM,CAACsC,gBAAgB;EACnD;AACJ;AACA,OAAO,MAAMC,qBAAqB,CAAC;EAC/B3C,WAAWA,CAAC4C,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC3C,IAAI,GAAG,EAAE,CAAC;EACnB;AACJ;AACA,OAAO,MAAM4C,sBAAsB,CAAC;EAChC7C,WAAWA,CAAC8C,MAAM,EAAE;IAChB,IAAI,CAAC7C,IAAI,GAAG,EAAE,CAAC;IACf,IAAI,CAAC6C,MAAM,GAAGA,MAAM;EACxB;AACJ;AACA,OAAO,MAAMC,4BAA4B,CAAC;EACtC/C,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,IAAI,GAAG,EAAE,CAAC;IACf;EACJ;AACJ;AACA,OAAO,MAAM+C,qBAAqB,CAAC;EAC/BhD,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,IAAI,GAAG,EAAE,CAAC;IACf;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}